{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _d3Array = require(\"d3-array\");\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _StackedBarSeries = require(\"./StackedBarSeries\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar OverlayBarSeries = function (_Component) {\n  _inherits(OverlayBarSeries, _Component);\n\n  function OverlayBarSeries(props) {\n    _classCallCheck(this, OverlayBarSeries);\n\n    var _this = _possibleConstructorReturn(this, (OverlayBarSeries.__proto__ || Object.getPrototypeOf(OverlayBarSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(OverlayBarSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var yAccessor = this.props.yAccessor;\n      var bars = getBars(this.props, moreProps, yAccessor);\n      (0, _StackedBarSeries.drawOnCanvas2)(this.props, ctx, bars);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var yAccessor = this.props.yAccessor;\n      var bars = getBars(this.props, moreProps, yAccessor);\n      return _react2.default.createElement(\"g\", {\n        className: \"react-stockcharts-bar-series\"\n      }, (0, _StackedBarSeries.getBarsSVG2)(this.props, bars));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        canvasDraw: this.drawOnCanvas,\n        clip: clip,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n\n  return OverlayBarSeries;\n}(_react.Component);\n\nOverlayBarSeries.propTypes = {\n  baseAt: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.func]).isRequired,\n  direction: _propTypes2.default.oneOf([\"up\", \"down\"]).isRequired,\n  stroke: _propTypes2.default.bool.isRequired,\n  widthRatio: _propTypes2.default.number.isRequired,\n  opacity: _propTypes2.default.number.isRequired,\n  fill: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  className: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  xAccessor: _propTypes2.default.func,\n  yAccessor: _propTypes2.default.arrayOf(_propTypes2.default.func),\n  xScale: _propTypes2.default.func,\n  yScale: _propTypes2.default.func,\n  plotData: _propTypes2.default.array,\n  clip: _propTypes2.default.bool.isRequired\n};\nOverlayBarSeries.defaultProps = {\n  baseAt: function baseAt(xScale, yScale\n  /* , d*/\n  ) {\n    return (0, _utils.first)(yScale.range());\n  },\n  direction: \"up\",\n  className: \"bar\",\n  stroke: false,\n  fill: \"#4682B4\",\n  opacity: 1,\n  widthRatio: 0.5,\n  width: _utils.plotDataLengthBarWidth,\n  clip: true\n};\n\nfunction getBars(props, moreProps, yAccessor) {\n  var xScale = moreProps.xScale,\n      xAccessor = moreProps.xAccessor,\n      yScale = moreProps.chartConfig.yScale,\n      plotData = moreProps.plotData;\n  var baseAt = props.baseAt,\n      className = props.className,\n      fill = props.fill,\n      stroke = props.stroke;\n  var getClassName = (0, _utils.functor)(className);\n  var getFill = (0, _utils.functor)(fill);\n  var getBase = (0, _utils.functor)(baseAt);\n  var widthFunctor = (0, _utils.functor)(props.width);\n  var width = widthFunctor(props, moreProps);\n  var offset = Math.floor(0.5 * width); // console.log(xScale.domain(), yScale.domain());\n\n  var bars = plotData.map(function (d) {\n    // eslint-disable-next-line prefer-const\n    var innerBars = yAccessor.map(function (eachYAccessor, i) {\n      var yValue = eachYAccessor(d);\n      if ((0, _utils.isNotDefined)(yValue)) return undefined;\n      var xValue = xAccessor(d);\n      var x = Math.round(xScale(xValue)) - offset;\n      var y = yScale(yValue); // console.log(yValue, y, xValue, x)\n\n      return {\n        width: offset * 2,\n        x: x,\n        y: y,\n        className: getClassName(d, i),\n        stroke: stroke ? getFill(d, i) : \"none\",\n        fill: getFill(d, i),\n        i: i\n      };\n    }).filter(function (yValue) {\n      return (0, _utils.isDefined)(yValue);\n    });\n    var b = getBase(xScale, yScale, d);\n    var h = void 0;\n\n    for (var i = innerBars.length - 1; i >= 0; i--) {\n      h = b - innerBars[i].y;\n\n      if (h < 0) {\n        innerBars[i].y = b;\n        h = -1 * h;\n      }\n\n      innerBars[i].height = h;\n      b = innerBars[i].y;\n    }\n\n    return innerBars;\n  });\n  return (0, _d3Array.merge)(bars);\n}\n\nexports.default = OverlayBarSeries;","map":null,"metadata":{},"sourceType":"script"}