{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TypeChooser = function (_Component) {\n  _inherits(TypeChooser, _Component);\n\n  function TypeChooser(props) {\n    _classCallCheck(this, TypeChooser);\n\n    var _this = _possibleConstructorReturn(this, (TypeChooser.__proto__ || Object.getPrototypeOf(TypeChooser)).call(this, props));\n\n    _this.state = {\n      type: _this.props.type\n    };\n    _this.handleTypeChange = _this.handleTypeChange.bind(_this);\n    return _this;\n  }\n\n  _createClass(TypeChooser, [{\n    key: \"handleTypeChange\",\n    value: function handleTypeChange(e) {\n      // console.log(e.target.value);\n      this.setState({\n        type: e.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\"div\", null, _react2.default.createElement(\"label\", null, \"Type: \"), _react2.default.createElement(\"select\", {\n        name: \"type\",\n        id: \"type\",\n        onChange: this.handleTypeChange,\n        value: this.state.type\n      }, _react2.default.createElement(\"option\", {\n        value: \"svg\"\n      }, \"svg\"), _react2.default.createElement(\"option\", {\n        value: \"hybrid\"\n      }, \"canvas + svg\")), _react2.default.createElement(\"div\", {\n        style: this.props.style\n      }, this.props.children(this.state.type)));\n    }\n  }]);\n\n  return TypeChooser;\n}(_react.Component);\n\nTypeChooser.propTypes = {\n  type: _propTypes2.default.oneOf([\"svg\", \"hybrid\"]),\n  children: _propTypes2.default.func.isRequired,\n  style: _propTypes2.default.object.isRequired\n};\nTypeChooser.defaultProps = {\n  type: \"hybrid\",\n  style: {}\n};\nexports.default = TypeChooser;","map":null,"metadata":{},"sourceType":"script"}