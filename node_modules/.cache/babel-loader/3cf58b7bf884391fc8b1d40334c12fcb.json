{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _saveSvgAsPng = require(\"save-svg-as-png\");\n\nvar _saveSvgAsPng2 = _interopRequireDefault(_saveSvgAsPng);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar dx = 0;\nvar dy = 0;\nvar SaveChartAsImage = {\n  save: function save(doc, container, background, cb) {\n    _saveSvgAsPng2.default.svgAsDataUri(container.getElementsByTagName(\"svg\")[0], {}, function (uri) {\n      // eslint-disable-next-line prefer-const\n      var image = new Image();\n\n      image.onload = function () {\n        // eslint-disable-next-line prefer-const\n        var canvas = doc.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height; // eslint-disable-next-line prefer-const\n\n        var context = canvas.getContext(\"2d\");\n\n        if ((0, _utils.isDefined)(background)) {\n          context.fillStyle = background;\n          context.fillRect(0, 0, canvas.width, canvas.height);\n        }\n\n        var canvasList = container.getElementsByTagName(\"canvas\");\n\n        for (var i = 0; i < canvasList.length; i++) {\n          var each = canvasList[i];\n\n          if ((0, _utils.isDefined)(each)) {\n            var parent = each.parentNode.parentNode.getBoundingClientRect();\n            var rect = each.getBoundingClientRect();\n            context.drawImage(each, rect.left - parent.left + dx, rect.top - parent.top + dy);\n          }\n        }\n\n        context.drawImage(image, dx, dy);\n        cb(canvas.toDataURL(\"image/png\"));\n      };\n\n      image.src = uri;\n    });\n  },\n  saveWithWhiteBG: function saveWithWhiteBG(doc, container, cb) {\n    return this.saveWithBG(doc, container, \"white\", cb);\n  },\n  saveWithDarkBG: function saveWithDarkBG(doc, container, cb) {\n    return this.saveWithBG(doc, container, \"#303030\", cb);\n  },\n  saveWithBG: function saveWithBG(doc, container, background, cb) {\n    return this.save(doc, container, background, cb);\n  },\n  saveChartAsImage: function saveChartAsImage(container) {\n    this.saveWithWhiteBG(document, container, function (src) {\n      var a = document.createElement(\"a\");\n      a.setAttribute(\"href\", src);\n      a.setAttribute(\"download\", \"Chart.png\");\n      document.body.appendChild(a);\n      a.addEventListener(\"click\", function ()\n      /* e */\n      {\n        a.parentNode.removeChild(a);\n      });\n      a.click();\n    });\n  }\n};\nexports.default = SaveChartAsImage;","map":null,"metadata":{},"sourceType":"script"}