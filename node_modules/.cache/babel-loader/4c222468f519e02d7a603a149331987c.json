{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _classCallCheck from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/pages/dashboard/gamma/index.js\";\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport ChartistGraph from 'react-chartist';\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nimport ProgressCard from 'components/CleanUIComponents/ProgressCard';\nimport ShortItemInfo from 'components/CleanUIComponents/ShortItemInfo';\nimport Donut from 'components/CleanUIComponents/Donut';\nimport { progressCardsData, newUsersData, inboundBandwidthData, outboundBandwidthData, topPhotosData, topPhotosGraphData, financeStatsData, supportCasesTableData, supportCasesPieData } from './data.json';\nimport styles from './style.module.scss';\nvar boundChartistOptions = {\n  showPoint: true,\n  showLine: true,\n  showArea: true,\n  fullWidth: true,\n  showLabel: false,\n  axisX: {\n    showGrid: false,\n    showLabel: false,\n    offset: 0\n  },\n  axisY: {\n    showGrid: false,\n    showLabel: false,\n    offset: 0\n  },\n  chartPadding: 0,\n  low: 0,\n  plugins: [ChartistTooltip({\n    anchorToPoint: false,\n    appendToBody: true,\n    seriesName: false\n  })]\n};\nvar supportCasesPieOptions = {\n  donut: true,\n  donutWidth: 35,\n  showLabel: false,\n  plugins: [ChartistTooltip({\n    anchorToPoint: false,\n    appendToBody: true,\n    seriesName: false\n  })]\n};\nvar supportCasesTableColumns = [{\n  title: 'Type',\n  dataIndex: 'type',\n  key: 'type'\n}, {\n  title: 'Amount',\n  key: 'amount',\n  dataIndex: 'amount',\n  render: function render(amount) {\n    if (amount === 'Negative') {\n      return React.createElement(\"span\", {\n        className: \"text-danger font-weight-bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, amount);\n    }\n\n    return React.createElement(\"span\", {\n      className: \"text-primary font-weight-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, amount);\n  }\n}];\n\nvar DashboardGamma =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DashboardGamma, _React$Component);\n\n  function DashboardGamma() {\n    _classCallCheck(this, DashboardGamma);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DashboardGamma).apply(this, arguments));\n  }\n\n  _createClass(DashboardGamma, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Helmet, {\n        title: \"Dashboard Gamma\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xl-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"utils__title utils__title--flat mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-uppercase font-size-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Progress Information\")), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, progressCardsData.map(function (item) {\n        return React.createElement(\"div\", {\n          className: \"col-lg-6\",\n          key: item.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(ProgressCard, {\n          title: item.title,\n          note: item.note,\n          currentValue: item.currentValue,\n          percent: item.percent,\n          dataColor: item.dataColor,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }));\n      })))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xl-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xl-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"utils__title utils__title--flat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-uppercase font-size-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Inbound Bandwidth\"))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-size-36 font-weight-bold text-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"246\")), React.createElement(ChartistGraph, {\n        data: inboundBandwidthData,\n        options: boundChartistOptions,\n        type: \"Line\",\n        className: \"height-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-xl-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"graphCard card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"utils__title utils__title--flat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-uppercase font-size-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Outbound Bandwidth\"))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"font-size-36 font-weight-bold text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"52\")), React.createElement(\"div\", {\n        className: \"utils__chartist utils__chartist--success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        data: outboundBandwidthData,\n        options: boundChartistOptions,\n        type: \"Line\",\n        className: \"height-200\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"col-xl-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card graphCard card--fullHeight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"utils__title utils__title--flat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-uppercase font-size-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Top photos\"))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, topPhotosData.map(function (item) {\n        var actionData = React.createElement(\"span\", {\n          style: {\n            color: item.actionDataColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, item.actionData);\n        return React.createElement(ShortItemInfo, {\n          key: item.name,\n          img: item.img,\n          name: item.name,\n          note: item.note,\n          actionData: actionData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"utils__chartist utils__chartist--danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        data: topPhotosGraphData,\n        options: boundChartistOptions,\n        type: \"Line\",\n        className: \"height-300\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-xl-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card--fullHeight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"utils__title utils__title--flat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-uppercase font-size-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"New Users\"))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, newUsersData.map(function (item) {\n        var actionData = React.createElement(\"a\", {\n          href: \"javascript: void(0);\",\n          className: \"btn btn-sm btn-outline-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }, \"Follow\");\n        return React.createElement(ShortItemInfo, {\n          key: item.name,\n          img: item.img,\n          name: item.name,\n          note: item.note,\n          actionData: actionData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        });\n      }))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card--fullHeight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"utils__title utils__title--flat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-uppercase font-size-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Support cases\"))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-xl-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        className: \"utils__scrollTable\",\n        scroll: {\n          x: '100%'\n        },\n        dataSource: supportCasesTableData,\n        columns: supportCasesTableColumns,\n        pagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-xl-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h-100 d-flex flex-column justify-content-center align-items-center \".concat(styles.chartPieExample),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        data: supportCasesPieData,\n        type: \"Pie\",\n        options: supportCasesPieOptions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Donut, {\n        type: \"success\",\n        name: \"Ready\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Donut, {\n        type: \"primary\",\n        name: \"In progress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Donut, {\n        type: \"danger\",\n        name: \"Defected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }))))))))), React.createElement(\"div\", {\n        className: \"col-lg-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card card--fullHeight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"utils__title utils__title--flat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"text-uppercase font-size-16\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Finance Stats\"))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, financeStatsData.map(function (item) {\n        var actionData = React.createElement(\"span\", {\n          style: {\n            color: item.actionDataColor\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, item.actionData);\n        return React.createElement(ShortItemInfo, {\n          key: item.name,\n          img: item.img,\n          name: item.name,\n          note: item.note,\n          actionData: actionData,\n          size: \"large\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        });\n      }))))));\n    }\n  }]);\n\n  return DashboardGamma;\n}(React.Component);\n\nexport default DashboardGamma;","map":{"version":3,"sources":["/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/pages/dashboard/gamma/index.js"],"names":["React","Helmet","ChartistGraph","ChartistTooltip","ProgressCard","ShortItemInfo","Donut","progressCardsData","newUsersData","inboundBandwidthData","outboundBandwidthData","topPhotosData","topPhotosGraphData","financeStatsData","supportCasesTableData","supportCasesPieData","styles","boundChartistOptions","showPoint","showLine","showArea","fullWidth","showLabel","axisX","showGrid","offset","axisY","chartPadding","low","plugins","anchorToPoint","appendToBody","seriesName","supportCasesPieOptions","donut","donutWidth","supportCasesTableColumns","title","dataIndex","key","render","amount","DashboardGamma","map","item","note","currentValue","percent","dataColor","actionData","color","actionDataColor","name","img","x","chartPieExample","Component"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,aAAP,MAA0B,4CAA1B;AACA,OAAOC,KAAP,MAAkB,oCAAlB;AAEA,SACEC,iBADF,EAEEC,YAFF,EAGEC,oBAHF,EAIEC,qBAJF,EAKEC,aALF,EAMEC,kBANF,EAOEC,gBAPF,EAQEC,qBARF,EASEC,mBATF,QAUO,aAVP;AAYA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,IAAMC,oBAAoB,GAAG;AAC3BC,EAAAA,SAAS,EAAE,IADgB;AAE3BC,EAAAA,QAAQ,EAAE,IAFiB;AAG3BC,EAAAA,QAAQ,EAAE,IAHiB;AAI3BC,EAAAA,SAAS,EAAE,IAJgB;AAK3BC,EAAAA,SAAS,EAAE,KALgB;AAM3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELF,IAAAA,SAAS,EAAE,KAFN;AAGLG,IAAAA,MAAM,EAAE;AAHH,GANoB;AAW3BC,EAAAA,KAAK,EAAE;AACLF,IAAAA,QAAQ,EAAE,KADL;AAELF,IAAAA,SAAS,EAAE,KAFN;AAGLG,IAAAA,MAAM,EAAE;AAHH,GAXoB;AAgB3BE,EAAAA,YAAY,EAAE,CAhBa;AAiB3BC,EAAAA,GAAG,EAAE,CAjBsB;AAkB3BC,EAAAA,OAAO,EAAE,CACP1B,eAAe,CAAC;AACd2B,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,YAAY,EAAE,IAFA;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAAD,CADR;AAlBkB,CAA7B;AA2BA,IAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,KAAK,EAAE,IADsB;AAE7BC,EAAAA,UAAU,EAAE,EAFiB;AAG7Bb,EAAAA,SAAS,EAAE,KAHkB;AAI7BO,EAAAA,OAAO,EAAE,CACP1B,eAAe,CAAC;AACd2B,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,YAAY,EAAE,IAFA;AAGdC,IAAAA,UAAU,EAAE;AAHE,GAAD,CADR;AAJoB,CAA/B;AAaA,IAAMI,wBAAwB,GAAG,CAC/B;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAD+B,EAM/B;AACEF,EAAAA,KAAK,EAAE,QADT;AAEEE,EAAAA,GAAG,EAAE,QAFP;AAGED,EAAAA,SAAS,EAAE,QAHb;AAIEE,EAAAA,MAAM,EAAE,gBAAAC,MAAM,EAAI;AAChB,QAAIA,MAAM,KAAK,UAAf,EAA2B;AACzB,aAAO;AAAM,QAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgDA,MAAhD,CAAP;AACD;;AACD,WAAO;AAAM,MAAA,SAAS,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiDA,MAAjD,CAAP;AACD;AATH,CAN+B,CAAjC;;IAmBMC,c;;;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGnC,iBAAiB,CAACoC,GAAlB,CAAsB,UAAAC,IAAI;AAAA,eACzB;AAAK,UAAA,SAAS,EAAC,UAAf;AAA0B,UAAA,GAAG,EAAEA,IAAI,CAACP,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,YAAD;AACE,UAAA,KAAK,EAAEO,IAAI,CAACP,KADd;AAEE,UAAA,IAAI,EAAEO,IAAI,CAACC,IAFb;AAGE,UAAA,YAAY,EAAED,IAAI,CAACE,YAHrB;AAIE,UAAA,OAAO,EAAEF,IAAI,CAACG,OAJhB;AAKE,UAAA,SAAS,EAAEH,IAAI,CAACI,SALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADyB;AAAA,OAA1B,CADH,CAJF,CADF,CAFF,EAsBE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,4CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CANF,EASE,oBAAC,aAAD;AACE,QAAA,IAAI,EAAEvC,oBADR;AAEE,QAAA,OAAO,EAAEQ,oBAFX;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF,CADF,EAmBE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,4CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,EASE;AAAK,QAAA,SAAS,EAAC,0CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,IAAI,EAAEP,qBADR;AAEE,QAAA,OAAO,EAAEO,oBAFX;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,CADF,CAnBF,CADF,CADF,EA2CE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,aAAa,CAACgC,GAAd,CAAkB,UAAAC,IAAI,EAAI;AACzB,YAAMK,UAAU,GACd;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEN,IAAI,CAACO;AAAd,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+CP,IAAI,CAACK,UAApD,CADF;AAGA,eACE,oBAAC,aAAD;AACE,UAAA,GAAG,EAAEL,IAAI,CAACQ,IADZ;AAEE,UAAA,GAAG,EAAER,IAAI,CAACS,GAFZ;AAGE,UAAA,IAAI,EAAET,IAAI,CAACQ,IAHb;AAIE,UAAA,IAAI,EAAER,IAAI,CAACC,IAJb;AAKE,UAAA,UAAU,EAAEI,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,OAbA,CADH,CANF,EAsBE;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,IAAI,EAAErC,kBADR;AAEE,QAAA,OAAO,EAAEK,oBAFX;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAC,YAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAtBF,CADF,CA3CF,EA4EE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,YAAY,CAACmC,GAAb,CAAiB,UAAAC,IAAI,EAAI;AACxB,YAAMK,UAAU,GACd;AAAG,UAAA,IAAI,EAAC,sBAAR;AAA+B,UAAA,SAAS,EAAC,gCAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKA,eACE,oBAAC,aAAD;AACE,UAAA,GAAG,EAAEL,IAAI,CAACQ,IADZ;AAEE,UAAA,GAAG,EAAER,IAAI,CAACS,GAFZ;AAGE,UAAA,IAAI,EAAET,IAAI,CAACQ,IAHb;AAIE,UAAA,IAAI,EAAER,IAAI,CAACC,IAJb;AAKE,UAAA,UAAU,EAAEI,UALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,OAfA,CADH,CANF,CADF,CA5EF,CAtBF,EA8HE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,oBADZ;AAEE,QAAA,MAAM,EAAE;AAAEK,UAAAA,CAAC,EAAE;AAAL,SAFV;AAGE,QAAA,UAAU,EAAExC,qBAHd;AAIE,QAAA,OAAO,EAAEsB,wBAJX;AAKE,QAAA,UAAU,EAAE,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAYE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,+EACPpB,MAAM,CAACuC,eADA,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE,oBAAC,aAAD;AACE,QAAA,IAAI,EAAExC,mBADR;AAEE,QAAA,IAAI,EAAC,KAFP;AAGE,QAAA,OAAO,EAAEkB,sBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAUE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,IAAI,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,IAAI,EAAC,aAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,EAOE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CAVF,CADF,CAZF,CADF,CANF,CADF,CADF,EAiDE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,6BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpB,gBAAgB,CAAC8B,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AAC5B,YAAMK,UAAU,GACd;AAAM,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEN,IAAI,CAACO;AAAd,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+CP,IAAI,CAACK,UAApD,CADF;AAGA,eACE,oBAAC,aAAD;AACE,UAAA,GAAG,EAAEL,IAAI,CAACQ,IADZ;AAEE,UAAA,GAAG,EAAER,IAAI,CAACS,GAFZ;AAGE,UAAA,IAAI,EAAET,IAAI,CAACQ,IAHb;AAIE,UAAA,IAAI,EAAER,IAAI,CAACC,IAJb;AAKE,UAAA,UAAU,EAAEI,UALd;AAME,UAAA,IAAI,EAAC,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,OAdA,CADH,CANF,CADF,CAjDF,CA9HF,CADF;AA6MD;;;;EA/M0BjD,KAAK,CAACwD,S;;AAkNnC,eAAed,cAAf","sourcesContent":["import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\nimport ChartistGraph from 'react-chartist'\r\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated'\r\nimport { Table } from 'antd'\r\nimport ProgressCard from 'components/CleanUIComponents/ProgressCard'\r\nimport ShortItemInfo from 'components/CleanUIComponents/ShortItemInfo'\r\nimport Donut from 'components/CleanUIComponents/Donut'\r\n\r\nimport {\r\n  progressCardsData,\r\n  newUsersData,\r\n  inboundBandwidthData,\r\n  outboundBandwidthData,\r\n  topPhotosData,\r\n  topPhotosGraphData,\r\n  financeStatsData,\r\n  supportCasesTableData,\r\n  supportCasesPieData,\r\n} from './data.json'\r\n\r\nimport styles from './style.module.scss'\r\n\r\nconst boundChartistOptions = {\r\n  showPoint: true,\r\n  showLine: true,\r\n  showArea: true,\r\n  fullWidth: true,\r\n  showLabel: false,\r\n  axisX: {\r\n    showGrid: false,\r\n    showLabel: false,\r\n    offset: 0,\r\n  },\r\n  axisY: {\r\n    showGrid: false,\r\n    showLabel: false,\r\n    offset: 0,\r\n  },\r\n  chartPadding: 0,\r\n  low: 0,\r\n  plugins: [\r\n    ChartistTooltip({\r\n      anchorToPoint: false,\r\n      appendToBody: true,\r\n      seriesName: false,\r\n    }),\r\n  ],\r\n}\r\n\r\nconst supportCasesPieOptions = {\r\n  donut: true,\r\n  donutWidth: 35,\r\n  showLabel: false,\r\n  plugins: [\r\n    ChartistTooltip({\r\n      anchorToPoint: false,\r\n      appendToBody: true,\r\n      seriesName: false,\r\n    }),\r\n  ],\r\n}\r\n\r\nconst supportCasesTableColumns = [\r\n  {\r\n    title: 'Type',\r\n    dataIndex: 'type',\r\n    key: 'type',\r\n  },\r\n  {\r\n    title: 'Amount',\r\n    key: 'amount',\r\n    dataIndex: 'amount',\r\n    render: amount => {\r\n      if (amount === 'Negative') {\r\n        return <span className=\"text-danger font-weight-bold\">{amount}</span>\r\n      }\r\n      return <span className=\"text-primary font-weight-bold\">{amount}</span>\r\n    },\r\n  },\r\n]\r\n\r\nclass DashboardGamma extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Helmet title=\"Dashboard Gamma\" />\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12\">\r\n            <div className=\"utils__title utils__title--flat mb-3\">\r\n              <strong className=\"text-uppercase font-size-16\">Progress Information</strong>\r\n            </div>\r\n            <div className=\"row\">\r\n              {progressCardsData.map(item => (\r\n                <div className=\"col-lg-6\" key={item.title}>\r\n                  <ProgressCard\r\n                    title={item.title}\r\n                    note={item.note}\r\n                    currentValue={item.currentValue}\r\n                    percent={item.percent}\r\n                    dataColor={item.dataColor}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-4\">\r\n            <div className=\"row\">\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"utils__title utils__title--flat\">\r\n                      <strong className=\"text-uppercase font-size-16\">Inbound Bandwidth</strong>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <span className=\"font-size-36 font-weight-bold text-primary\">246</span>\r\n                  </div>\r\n                  <ChartistGraph\r\n                    data={inboundBandwidthData}\r\n                    options={boundChartistOptions}\r\n                    type=\"Line\"\r\n                    className=\"height-200\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"col-xl-12\">\r\n                <div className=\"graphCard card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"utils__title utils__title--flat\">\r\n                      <strong className=\"text-uppercase font-size-16\">Outbound Bandwidth</strong>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    <span className=\"font-size-36 font-weight-bold text-success\">52</span>\r\n                  </div>\r\n                  <div className=\"utils__chartist utils__chartist--success\">\r\n                    <ChartistGraph\r\n                      data={outboundBandwidthData}\r\n                      options={boundChartistOptions}\r\n                      type=\"Line\"\r\n                      className=\"height-200\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-4\">\r\n            <div className=\"card graphCard card--fullHeight\">\r\n              <div className=\"card-header\">\r\n                <div className=\"utils__title utils__title--flat\">\r\n                  <strong className=\"text-uppercase font-size-16\">Top photos</strong>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                {topPhotosData.map(item => {\r\n                  const actionData = (\r\n                    <span style={{ color: item.actionDataColor }}>{item.actionData}</span>\r\n                  )\r\n                  return (\r\n                    <ShortItemInfo\r\n                      key={item.name}\r\n                      img={item.img}\r\n                      name={item.name}\r\n                      note={item.note}\r\n                      actionData={actionData}\r\n                    />\r\n                  )\r\n                })}\r\n              </div>\r\n              <div className=\"utils__chartist utils__chartist--danger\">\r\n                <ChartistGraph\r\n                  data={topPhotosGraphData}\r\n                  options={boundChartistOptions}\r\n                  type=\"Line\"\r\n                  className=\"height-300\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-xl-4\">\r\n            <div className=\"card card--fullHeight\">\r\n              <div className=\"card-header\">\r\n                <div className=\"utils__title utils__title--flat\">\r\n                  <strong className=\"text-uppercase font-size-16\">New Users</strong>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                {newUsersData.map(item => {\r\n                  const actionData = (\r\n                    <a href=\"javascript: void(0);\" className=\"btn btn-sm btn-outline-default\">\r\n                      Follow\r\n                    </a>\r\n                  )\r\n                  return (\r\n                    <ShortItemInfo\r\n                      key={item.name}\r\n                      img={item.img}\r\n                      name={item.name}\r\n                      note={item.note}\r\n                      actionData={actionData}\r\n                    />\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"card card--fullHeight\">\r\n              <div className=\"card-header\">\r\n                <div className=\"utils__title utils__title--flat\">\r\n                  <strong className=\"text-uppercase font-size-16\">Support cases</strong>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-xl-6\">\r\n                    <div className=\"mb-3\">\r\n                      <Table\r\n                        className=\"utils__scrollTable\"\r\n                        scroll={{ x: '100%' }}\r\n                        dataSource={supportCasesTableData}\r\n                        columns={supportCasesTableColumns}\r\n                        pagination={false}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-xl-6\">\r\n                    <div\r\n                      className={`h-100 d-flex flex-column justify-content-center align-items-center ${\r\n                        styles.chartPieExample\r\n                      }`}\r\n                    >\r\n                      <ChartistGraph\r\n                        data={supportCasesPieData}\r\n                        type=\"Pie\"\r\n                        options={supportCasesPieOptions}\r\n                      />\r\n                      <div className=\"text-center\">\r\n                        <span className=\"mr-2\">\r\n                          <Donut type=\"success\" name=\"Ready\" />\r\n                        </span>\r\n                        <span className=\"mr-2\">\r\n                          <Donut type=\"primary\" name=\"In progress\" />\r\n                        </span>\r\n                        <span className=\"mr-2\">\r\n                          <Donut type=\"danger\" name=\"Defected\" />\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"card card--fullHeight\">\r\n              <div className=\"card-header\">\r\n                <div className=\"utils__title utils__title--flat\">\r\n                  <strong className=\"text-uppercase font-size-16\">Finance Stats</strong>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                {financeStatsData.map(item => {\r\n                  const actionData = (\r\n                    <span style={{ color: item.actionDataColor }}>{item.actionData}</span>\r\n                  )\r\n                  return (\r\n                    <ShortItemInfo\r\n                      key={item.name}\r\n                      img={item.img}\r\n                      name={item.name}\r\n                      note={item.note}\r\n                      actionData={actionData}\r\n                      size=\"large\"\r\n                    />\r\n                  )\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DashboardGamma\r\n"]},"metadata":{},"sourceType":"module"}