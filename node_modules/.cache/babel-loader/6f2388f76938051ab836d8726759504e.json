{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _d3Collection = require(\"d3-collection\");\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar OHLCSeries = function (_Component) {\n  _inherits(OHLCSeries, _Component);\n\n  function OHLCSeries(props) {\n    _classCallCheck(this, OHLCSeries);\n\n    var _this = _possibleConstructorReturn(this, (OHLCSeries.__proto__ || Object.getPrototypeOf(OHLCSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(OHLCSeries, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var yAccessor = this.props.yAccessor;\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData;\n      var barData = getOHLCBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n\n      _drawOnCanvas(ctx, barData);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var clip = this.props.clip;\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        canvasDraw: this.drawOnCanvas,\n        clip: clip,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props = this.props,\n          className = _props.className,\n          yAccessor = _props.yAccessor;\n      var xAccessor = moreProps.xAccessor;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          plotData = moreProps.plotData;\n      var barData = getOHLCBars(this.props, xAccessor, yAccessor, xScale, yScale, plotData);\n      var strokeWidth = barData.strokeWidth,\n          bars = barData.bars;\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, bars.map(function (d, idx) {\n        return _react2.default.createElement(\"path\", {\n          key: idx,\n          className: d.className,\n          stroke: d.stroke,\n          strokeWidth: strokeWidth,\n          d: \"M\" + d.openX1 + \" \" + d.openY + \" L\" + d.openX2 + \" \" + d.openY + \" M\" + d.x + \" \" + d.y1 + \" L\" + d.x + \" \" + d.y2 + \" M\" + d.closeX1 + \" \" + d.closeY + \" L\" + d.closeX2 + \" \" + d.closeY\n        });\n      }));\n    }\n  }]);\n\n  return OHLCSeries;\n}(_react.Component);\n\nOHLCSeries.propTypes = {\n  className: _propTypes2.default.string,\n  classNames: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  stroke: _propTypes2.default.oneOfType([_propTypes2.default.func, _propTypes2.default.string]).isRequired,\n  yAccessor: _propTypes2.default.func.isRequired,\n  clip: _propTypes2.default.bool.isRequired\n};\nOHLCSeries.defaultProps = {\n  className: \"react-stockcharts-ohlc\",\n  yAccessor: function yAccessor(d) {\n    return {\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close\n    };\n  },\n  classNames: function classNames(d) {\n    return (0, _utils.isDefined)(d.absoluteChange) ? d.absoluteChange > 0 ? \"up\" : \"down\" : \"firstbar\";\n  },\n  stroke: function stroke(d) {\n    return (0, _utils.isDefined)(d.absoluteChange) ? d.absoluteChange > 0 ? \"#6BA583\" : \"#FF0000\" : \"#000000\";\n  },\n  clip: true\n};\n\nfunction _drawOnCanvas(ctx, barData) {\n  var strokeWidth = barData.strokeWidth,\n      bars = barData.bars;\n  var wickNest = (0, _d3Collection.nest)().key(function (d) {\n    return d.stroke;\n  }).entries(bars);\n  ctx.lineWidth = strokeWidth;\n  wickNest.forEach(function (outer) {\n    var key = outer.key,\n        values = outer.values;\n    ctx.strokeStyle = key;\n    values.forEach(function (d) {\n      ctx.beginPath();\n      ctx.moveTo(d.x, d.y1);\n      ctx.lineTo(d.x, d.y2);\n      ctx.moveTo(d.openX1, d.openY);\n      ctx.lineTo(d.openX2, d.openY);\n      ctx.moveTo(d.closeX1, d.closeY);\n      ctx.lineTo(d.closeX2, d.closeY);\n      ctx.stroke();\n    });\n  });\n}\n\nfunction getOHLCBars(props, xAccessor, yAccessor, xScale, yScale, plotData) {\n  var classNamesProp = props.classNames,\n      strokeProp = props.stroke;\n  var strokeFunc = (0, _utils.functor)(strokeProp);\n  var classNameFunc = (0, _utils.functor)(classNamesProp);\n  var width = xScale(xAccessor(plotData[plotData.length - 1])) - xScale(xAccessor(plotData[0]));\n  var barWidth = Math.max(1, Math.round(width / (plotData.length - 1) / 2) - 1.5);\n  var strokeWidth = Math.min(barWidth, 6);\n  var bars = plotData.filter(function (d) {\n    return (0, _utils.isDefined)(yAccessor(d).close);\n  }).map(function (d) {\n    var ohlc = yAccessor(d),\n        x = Math.round(xScale(xAccessor(d))),\n        y1 = yScale(ohlc.high),\n        y2 = yScale(ohlc.low),\n        openX1 = x - barWidth,\n        openX2 = x + strokeWidth / 2,\n        openY = yScale(ohlc.open),\n        closeX1 = x - strokeWidth / 2,\n        closeX2 = x + barWidth,\n        closeY = yScale(ohlc.close),\n        className = classNameFunc(d),\n        stroke = strokeFunc(d);\n    return {\n      x: x,\n      y1: y1,\n      y2: y2,\n      openX1: openX1,\n      openX2: openX2,\n      openY: openY,\n      closeX1: closeX1,\n      closeX2: closeX2,\n      closeY: closeY,\n      stroke: stroke,\n      className: className\n    };\n  });\n  return {\n    barWidth: barWidth,\n    strokeWidth: strokeWidth,\n    bars: bars\n  };\n}\n\nexports.default = OHLCSeries;","map":null,"metadata":{},"sourceType":"script"}