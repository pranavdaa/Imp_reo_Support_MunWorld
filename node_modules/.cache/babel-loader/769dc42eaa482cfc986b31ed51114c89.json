{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _EdgeCoordinateV = require(\"./EdgeCoordinateV3\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar EdgeIndicator = function (_Component) {\n  _inherits(EdgeIndicator, _Component);\n\n  function EdgeIndicator(props) {\n    _classCallCheck(this, EdgeIndicator);\n\n    var _this = _possibleConstructorReturn(this, (EdgeIndicator.__proto__ || Object.getPrototypeOf(EdgeIndicator)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(EdgeIndicator, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var edge = helper(this.props, moreProps);\n\n      var props = _extends({}, this.props, edge);\n\n      (0, _EdgeCoordinateV.drawOnCanvas)(ctx, props);\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var edge = helper(this.props, moreProps);\n\n      var props = _extends({}, this.props, edge);\n\n      return (0, _EdgeCoordinateV.renderSVG)(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        edgeClip: true,\n        clip: false,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }]);\n\n  return EdgeIndicator;\n}(_react.Component);\n\nEdgeIndicator.propTypes = {\n  yAccessor: _propTypes2.default.func,\n  type: _propTypes2.default.oneOf([\"horizontal\"]),\n  className: _propTypes2.default.string,\n  fill: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  lineStroke: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  textFill: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  itemType: _propTypes2.default.oneOf([\"first\", \"last\"]).isRequired,\n  orient: _propTypes2.default.oneOf([\"left\", \"right\"]),\n  edgeAt: _propTypes2.default.oneOf([\"left\", \"right\"]),\n  displayFormat: _propTypes2.default.func,\n  rectHeight: _propTypes2.default.number,\n  rectWidth: _propTypes2.default.number,\n  arrowWidth: _propTypes2.default.number,\n  lineStrokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes)\n};\nEdgeIndicator.defaultProps = {\n  className: \"react-stockcharts-edgeindicator\",\n  type: \"horizontal\",\n  orient: \"left\",\n  edgeAt: \"left\",\n  textFill: \"#FFFFFF\",\n  displayFormat: (0, _d3Format.format)(\".2f\"),\n  yAxisPad: 0,\n  rectHeight: 20,\n  rectWidth: 50,\n  arrowWidth: 10,\n  fontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n  fontSize: 13,\n  dx: 0,\n  hideLine: false,\n  fill: \"#8a8a8a\",\n  opacity: 1,\n  stroke: _utils.noop,\n  strokeOpacity: 1,\n  strokeWidth: 3,\n  lineStroke: \"#000000\",\n  lineOpacity: 0.3,\n  lineStrokeDasharray: \"ShortDash\"\n};\n\nfunction helper(props, moreProps) {\n  var itemType = props.itemType,\n      yAccessor = props.yAccessor;\n  var plotData = moreProps.plotData;\n  var item = itemType === \"first\" ? (0, _utils.first)(plotData, yAccessor) : (0, _utils.last)(plotData, yAccessor); // var currentItem = ChartDataUtil.getCurrentItemForChartNew(currentItems, forChart);\n\n  var edge = (0, _utils.isDefined)(item) ? getEdge(props, moreProps, item) : null;\n  return edge;\n}\n\nfunction getEdge(props, moreProps, item) {\n  var edgeType = props.type,\n      displayFormat = props.displayFormat,\n      edgeAt = props.edgeAt,\n      yAxisPad = props.yAxisPad,\n      orient = props.orient,\n      lineStroke = props.lineStroke;\n  var yAccessor = props.yAccessor,\n      fill = props.fill,\n      textFill = props.textFill,\n      rectHeight = props.rectHeight,\n      rectWidth = props.rectWidth,\n      arrowWidth = props.arrowWidth;\n  var fontFamily = props.fontFamily,\n      fontSize = props.fontSize;\n  var stroke = props.stroke;\n  var xScale = moreProps.xScale,\n      yScale = moreProps.chartConfig.yScale,\n      xAccessor = moreProps.xAccessor,\n      width = moreProps.width;\n  var yValue = yAccessor(item),\n      xValue = xAccessor(item);\n  var x1 = Math.round(xScale(xValue)),\n      y1 = Math.round(yScale(yValue));\n  var left = 0,\n      right = width;\n  var edgeX = edgeAt === \"left\" ? left - yAxisPad : right + yAxisPad;\n  return {\n    // ...props,\n    coordinate: displayFormat(yValue),\n    show: true,\n    type: edgeType,\n    orient: orient,\n    edgeAt: edgeX,\n    fill: (0, _utils.functor)(fill)(item),\n    lineStroke: (0, _utils.functor)(lineStroke)(item),\n    stroke: (0, _utils.functor)(stroke)(item),\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    textFill: (0, _utils.functor)(textFill)(item),\n    rectHeight: rectHeight,\n    rectWidth: rectWidth,\n    arrowWidth: arrowWidth,\n    x1: x1,\n    y1: y1,\n    x2: right,\n    y2: y1\n  };\n}\n\nexports.default = EdgeIndicator;","map":null,"metadata":{},"sourceType":"script"}