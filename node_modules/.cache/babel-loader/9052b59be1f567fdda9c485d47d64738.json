{"ast":null,"code":"import \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport _classCallCheck from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/components/LayoutComponents/Settings/index.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport styles from './style.module.scss';\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var settings = _ref.settings;\n  return {\n    settings: settings\n  };\n};\n\nvar Settings = (_dec = connect(mapStateToProps), _dec(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Settings, _React$Component);\n\n  function Settings() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Settings);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Settings)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.changeSetting = function (setting, value) {\n      var dispatch = _this.props.dispatch;\n      dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: setting,\n          value: value\n        }\n      });\n    };\n\n    _this.closeSettings = function () {\n      var dispatch = _this.props.dispatch;\n      dispatch({\n        type: 'settings/CHANGE_SETTING',\n        payload: {\n          setting: 'isSettingsOpen',\n          value: false\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Settings, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$settings = this.props.settings,\n          isLightTheme = _this$props$settings.isLightTheme,\n          isSettingsOpen = _this$props$settings.isSettingsOpen,\n          isMenuTop = _this$props$settings.isMenuTop,\n          isMenuCollapsed = _this$props$settings.isMenuCollapsed,\n          isBorderless = _this$props$settings.isBorderless,\n          isMenuShadow = _this$props$settings.isMenuShadow,\n          isSquaredBorders = _this$props$settings.isSquaredBorders,\n          isFixedWidth = _this$props$settings.isFixedWidth;\n      return React.createElement(\"div\", {\n        className: isSettingsOpen ? \"\".concat(styles.settings, \" \").concat(styles.settingsOpened) : styles.settings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Scrollbars, {\n        style: {\n          height: '100vh'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Theme Settings\", React.createElement(\"button\", {\n        className: \"\".concat(styles.close, \" fa fa-times\"),\n        onClick: this.closeSettings,\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"This component \\\"Settings\\\" gives possibility to construct custom blocks with any widgets, components and elements inside, like this theme settings\"), React.createElement(\"div\", {\n        className: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(_Switch, {\n        checked: isMenuTop,\n        onChange: function onChange(value) {\n          _this2.changeSetting('isMenuTop', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.itemLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Menu Top (Horizontal)\")), React.createElement(\"div\", {\n        className: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(_Switch, {\n        disabled: isMenuTop,\n        checked: isMenuCollapsed && !isMenuTop,\n        onChange: function onChange(value) {\n          _this2.changeSetting('isMenuCollapsed', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.itemLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Collapsed Menu\")), React.createElement(\"div\", {\n        className: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(_Switch, {\n        disabled: isMenuTop,\n        checked: isMenuShadow && !isMenuTop,\n        onChange: function onChange(value) {\n          _this2.changeSetting('isMenuShadow', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.itemLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Menu Shadow\")), React.createElement(\"div\", {\n        className: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(_Switch, {\n        checked: isLightTheme,\n        onChange: function onChange(value) {\n          _this2.changeSetting('isLightTheme', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.itemLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Light Theme\")), React.createElement(\"div\", {\n        className: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(_Switch, {\n        checked: isBorderless,\n        onChange: function onChange(value) {\n          _this2.changeSetting('isBorderless', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.itemLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Borderless Cards\")), React.createElement(\"div\", {\n        className: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(_Switch, {\n        checked: isSquaredBorders,\n        onChange: function onChange(value) {\n          _this2.changeSetting('isSquaredBorders', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.itemLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Squared Borders\")), React.createElement(\"div\", {\n        className: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(_Switch, {\n        checked: isFixedWidth,\n        onChange: function onChange(value) {\n          _this2.changeSetting('isFixedWidth', value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: styles.itemLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Fixed Width\")))));\n    }\n  }]);\n\n  return Settings;\n}(React.Component), _temp)) || _class);\nexport default Settings;","map":{"version":3,"sources":["/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/components/LayoutComponents/Settings/index.js"],"names":["React","connect","Scrollbars","styles","mapStateToProps","settings","Settings","changeSetting","setting","value","dispatch","props","type","payload","closeSettings","isLightTheme","isSettingsOpen","isMenuTop","isMenuCollapsed","isBorderless","isMenuShadow","isSquaredBorders","isFixedWidth","settingsOpened","height","container","title","close","description","item","itemLabel","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Scrollbars } from 'react-custom-scrollbars'\nimport { Switch } from 'antd'\nimport styles from './style.module.scss'\n\nconst mapStateToProps = ({ settings }) => ({ settings })\n\n@connect(mapStateToProps)\nclass Settings extends React.Component {\n  changeSetting = (setting, value) => {\n    const { dispatch } = this.props\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting,\n        value,\n      },\n    })\n  }\n\n  closeSettings = () => {\n    const { dispatch } = this.props\n    dispatch({\n      type: 'settings/CHANGE_SETTING',\n      payload: {\n        setting: 'isSettingsOpen',\n        value: false,\n      },\n    })\n  }\n\n  render() {\n    const {\n      settings: {\n        isLightTheme,\n        isSettingsOpen,\n        isMenuTop,\n        isMenuCollapsed,\n        isBorderless,\n        isMenuShadow,\n        isSquaredBorders,\n        isFixedWidth,\n      },\n    } = this.props\n\n    return (\n      <div\n        className={isSettingsOpen ? `${styles.settings} ${styles.settingsOpened}` : styles.settings}\n      >\n        <Scrollbars style={{ height: '100vh' }}>\n          <div className={styles.container}>\n            <div className={styles.title}>\n              Theme Settings\n              <button\n                className={`${styles.close} fa fa-times`}\n                onClick={this.closeSettings}\n                type=\"button\"\n              />\n            </div>\n            <div className={styles.description}>\n              This component &quot;Settings&quot; gives possibility to construct custom blocks with\n              any widgets, components and elements inside, like this theme settings\n            </div>\n            <div className={styles.item}>\n              <Switch\n                checked={isMenuTop}\n                onChange={value => {\n                  this.changeSetting('isMenuTop', value)\n                }}\n              />\n              <span className={styles.itemLabel}>Menu Top (Horizontal)</span>\n            </div>\n            <div className={styles.item}>\n              <Switch\n                disabled={isMenuTop}\n                checked={isMenuCollapsed && !isMenuTop}\n                onChange={value => {\n                  this.changeSetting('isMenuCollapsed', value)\n                }}\n              />\n              <span className={styles.itemLabel}>Collapsed Menu</span>\n            </div>\n            <div className={styles.item}>\n              <Switch\n                disabled={isMenuTop}\n                checked={isMenuShadow && !isMenuTop}\n                onChange={value => {\n                  this.changeSetting('isMenuShadow', value)\n                }}\n              />\n              <span className={styles.itemLabel}>Menu Shadow</span>\n            </div>\n            <div className={styles.item}>\n              <Switch\n                checked={isLightTheme}\n                onChange={value => {\n                  this.changeSetting('isLightTheme', value)\n                }}\n              />\n              <span className={styles.itemLabel}>Light Theme</span>\n            </div>\n            <div className={styles.item}>\n              <Switch\n                checked={isBorderless}\n                onChange={value => {\n                  this.changeSetting('isBorderless', value)\n                }}\n              />\n              <span className={styles.itemLabel}>Borderless Cards</span>\n            </div>\n            <div className={styles.item}>\n              <Switch\n                checked={isSquaredBorders}\n                onChange={value => {\n                  this.changeSetting('isSquaredBorders', value)\n                }}\n              />\n              <span className={styles.itemLabel}>Squared Borders</span>\n            </div>\n            <div className={styles.item}>\n              <Switch\n                checked={isFixedWidth}\n                onChange={value => {\n                  this.changeSetting('isFixedWidth', value)\n                }}\n              />\n              <span className={styles.itemLabel}>Fixed Width</span>\n            </div>\n          </div>\n        </Scrollbars>\n      </div>\n    )\n  }\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}