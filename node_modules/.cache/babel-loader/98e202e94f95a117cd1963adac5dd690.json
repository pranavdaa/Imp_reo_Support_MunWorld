{"ast":null,"code":"import _toArray from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _classCallCheck from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/components/LayoutComponents/Breadcrumbs/index.js\";\n\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reduce } from 'lodash';\nimport styles from './style.module.scss';\nimport Logo from './img/Logo.png';\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var menu = _ref.menu;\n  return {\n    isMenuTop: menu.isMenuTop,\n    menuTopData: menu.menuTopData,\n    menuLeftData: menu.menuLeftData\n  };\n};\n\nvar Breadcrumbs = (_dec = connect(mapStateToProps), withRouter(_class = _dec(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Breadcrumbs, _React$Component);\n\n  function Breadcrumbs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Breadcrumbs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Breadcrumbs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      breadcrumb: []\n    };\n\n    _this.setBreadcrumbs = function (props) {\n      var _this$props = _this.props,\n          isMenuTop = _this$props.isMenuTop,\n          menuTopData = _this$props.menuTopData,\n          menuLeftData = _this$props.menuLeftData;\n\n      _this.setState({\n        breadcrumb: _this.getBreadcrumb(props, isMenuTop ? menuTopData : menuLeftData)\n      });\n    };\n\n    _this.getBreadcrumb = function (props, items) {\n      var _this$getPath = _this.getPath(items, props.location.pathname),\n          _this$getPath2 = _toArray(_this$getPath),\n          activeMenuItem = _this$getPath2[0],\n          path = _this$getPath2.slice(1);\n\n      if (activeMenuItem && path.length) {\n        return path.reverse().map(function (item, index) {\n          if (index === path.length - 1) {\n            return React.createElement(\"span\", {\n              key: item.key,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 63\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"\".concat(styles.arrow, \" text-muted\"),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              className: \"text-muted\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65\n              },\n              __self: this\n            }, item.title), React.createElement(\"span\", {\n              className: styles.arrow,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }), React.createElement(\"strong\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 67\n              },\n              __self: this\n            }, activeMenuItem.title));\n          }\n\n          return React.createElement(\"span\", {\n            key: item.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"\".concat(styles.arrow, \" text-muted\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            className: \"text-muted\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, item.title));\n        });\n      }\n\n      return React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: styles.arrow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, activeMenuItem.title));\n    };\n\n    return _this;\n  }\n\n  _createClass(Breadcrumbs, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setBreadcrumbs(this.props);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      this.setBreadcrumbs(newProps);\n    }\n  }, {\n    key: \"getPath\",\n    value: function getPath(data, url) {\n      var _this2 = this;\n\n      var parents = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var items = reduce(data, function (result, entry) {\n        if (result.length) {\n          return result;\n        }\n\n        if (entry.url === url) {\n          return [entry].concat(parents);\n        }\n\n        if (entry.children) {\n          var nested = _this2.getPath(entry.children, url, [entry].concat(parents));\n\n          return (result || []).concat(nested.filter(function (e) {\n            return !!e;\n          }));\n        }\n\n        return result;\n      }, []);\n      return items.length > 0 ? items : [false];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var breadcrumb = this.state.breadcrumb;\n      return React.createElement(\"div\", {\n        className: styles.breadcrumbs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.path,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          padding: \"20px\"\n        },\n        to: \"/mun\",\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: Logo,\n        width: \"20%\",\n        height: \"20%\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), breadcrumb));\n    }\n  }]);\n\n  return Breadcrumbs;\n}(React.Component), _temp)) || _class) || _class);\nexport default Breadcrumbs;","map":{"version":3,"sources":["/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/components/LayoutComponents/Breadcrumbs/index.js"],"names":["React","Link","withRouter","connect","reduce","styles","Logo","mapStateToProps","menu","isMenuTop","menuTopData","menuLeftData","Breadcrumbs","state","breadcrumb","setBreadcrumbs","props","setState","getBreadcrumb","items","getPath","location","pathname","activeMenuItem","path","length","reverse","map","item","index","key","arrow","title","newProps","data","url","parents","result","entry","concat","children","nested","filter","e","breadcrumbs","padding","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { reduce } from 'lodash'\nimport styles from './style.module.scss'\nimport Logo from './img/Logo.png'\nconst mapStateToProps = ({ menu }) => ({\n  isMenuTop: menu.isMenuTop,\n  menuTopData: menu.menuTopData,\n  menuLeftData: menu.menuLeftData,\n})\n\n@withRouter\n@connect(mapStateToProps)\nclass Breadcrumbs extends React.Component {\n  state = {\n    breadcrumb: [],\n  }\n\n  componentDidMount() {\n    this.setBreadcrumbs(this.props)\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setBreadcrumbs(newProps)\n  }\n\n  setBreadcrumbs = props => {\n    const { isMenuTop, menuTopData, menuLeftData } = this.props\n    this.setState({\n      breadcrumb: this.getBreadcrumb(props, isMenuTop ? menuTopData : menuLeftData),\n    })\n  }\n\n  getPath(data, url, parents = []) {\n    const items = reduce(\n      data,\n      (result, entry) => {\n        if (result.length) {\n          return result\n        }\n        if (entry.url === url) {\n          return [entry].concat(parents)\n        }\n        if (entry.children) {\n          const nested = this.getPath(entry.children, url, [entry].concat(parents))\n          return (result || []).concat(nested.filter(e => !!e))\n        }\n        return result\n      },\n      [],\n    )\n    return items.length > 0 ? items : [false]\n  }\n\n  getBreadcrumb = (props, items) => {\n    const [activeMenuItem, ...path] = this.getPath(items, props.location.pathname)\n\n    if (activeMenuItem && path.length) {\n      return path.reverse().map((item, index) => {\n        if (index === path.length - 1) {\n          return (\n            <span key={item.key}>\n              <span className={`${styles.arrow} text-muted`} />\n              <span className=\"text-muted\">{item.title}</span>\n              <span className={styles.arrow} />\n              <strong>{activeMenuItem.title}</strong>\n            </span>\n          )\n        }\n        return (\n          <span key={item.key}>\n            <span className={`${styles.arrow} text-muted`} />\n            <span className=\"text-muted\">{item.title}</span>\n          </span>\n        )\n      })\n    }\n    return (\n      <span>\n        <span className={styles.arrow} />\n        <strong>{activeMenuItem.title}</strong>\n      </span>\n    )\n  }\n\n  render() {\n    const { breadcrumb } = this.state\n    return (\n      <div className={styles.breadcrumbs}>\n        <div  className={styles.path}>\n          <Link style={{padding:\"20px\"}} to=\"/mun\" className=\"text-muted\">\n             <img src={Logo} width=\"20%\" height=\"20%\" />\n          </Link>\n          {breadcrumb}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Breadcrumbs\n"]},"metadata":{},"sourceType":"module"}