{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _utils = require(\"../utils\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar StraightLine = function (_Component) {\n  _inherits(StraightLine, _Component);\n\n  function StraightLine(props) {\n    _classCallCheck(this, StraightLine);\n\n    var _this = _possibleConstructorReturn(this, (StraightLine.__proto__ || Object.getPrototypeOf(StraightLine)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    return _this;\n  }\n\n  _createClass(StraightLine, [{\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          type = _props.type,\n          stroke = _props.stroke,\n          strokeWidth = _props.strokeWidth,\n          opacity = _props.opacity,\n          strokeDasharray = _props.strokeDasharray;\n      var _props2 = this.props,\n          yValue = _props2.yValue,\n          xValue = _props2.xValue;\n      var xScale = moreProps.xScale;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          yScale = _moreProps$chartConfi.yScale,\n          width = _moreProps$chartConfi.width,\n          height = _moreProps$chartConfi.height;\n      ctx.beginPath();\n      ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, opacity);\n      ctx.lineWidth = strokeWidth;\n\n      var _getLineCoordinates = getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height),\n          x1 = _getLineCoordinates.x1,\n          y1 = _getLineCoordinates.y1,\n          x2 = _getLineCoordinates.x2,\n          y2 = _getLineCoordinates.y2;\n\n      ctx.setLineDash((0, _utils.getStrokeDasharray)(strokeDasharray).split(\",\"));\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        drawOn: [\"pan\"]\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var width = moreProps.width,\n          height = moreProps.height;\n      var xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale;\n      var className = this.props.className;\n      var _props3 = this.props,\n          type = _props3.type,\n          stroke = _props3.stroke,\n          strokeWidth = _props3.strokeWidth,\n          opacity = _props3.opacity,\n          strokeDasharray = _props3.strokeDasharray;\n      var _props4 = this.props,\n          yValue = _props4.yValue,\n          xValue = _props4.xValue;\n      var lineCoordinates = getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height);\n      return _react2.default.createElement(\"line\", _extends({\n        className: className,\n        strokeDasharray: (0, _utils.getStrokeDasharray)(strokeDasharray),\n        stroke: stroke,\n        strokeWidth: strokeWidth,\n        strokeOpacity: opacity\n      }, lineCoordinates));\n    }\n  }]);\n\n  return StraightLine;\n}(_react.Component);\n\nfunction getLineCoordinates(type, xScale, yScale, xValue, yValue, width, height) {\n  return type === \"horizontal\" ? {\n    x1: 0,\n    y1: Math.round(yScale(yValue)),\n    x2: width,\n    y2: Math.round(yScale(yValue))\n  } : {\n    x1: Math.round(xScale(xValue)),\n    y1: 0,\n    x2: Math.round(xScale(xValue)),\n    y2: height\n  };\n}\n\nStraightLine.propTypes = {\n  className: _propTypes2.default.string,\n  type: _propTypes2.default.oneOf([\"vertical\", \"horizontal\"]),\n  stroke: _propTypes2.default.string,\n  strokeWidth: _propTypes2.default.number,\n  strokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  opacity: _propTypes2.default.number.isRequired,\n  yValue: function yValue(props, propName\n  /* , componentName */\n  ) {\n    if (props.type === \"vertical\" && (0, _utils.isDefined)(props[propName])) return new Error(\"Do not define `yValue` when type is `vertical`, define the `xValue` prop\");\n    if (props.type === \"horizontal\" && (0, _utils.isNotDefined)(props[propName])) return new Error(\"when type = `horizontal` `yValue` is required\"); // if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `yValue` accepts a number\");\n  },\n  xValue: function xValue(props, propName\n  /* , componentName */\n  ) {\n    if (props.type === \"horizontal\" && (0, _utils.isDefined)(props[propName])) return new Error(\"Do not define `xValue` when type is `horizontal`, define the `yValue` prop\");\n    if (props.type === \"vertical\" && (0, _utils.isNotDefined)(props[propName])) return new Error(\"when type = `vertical` `xValue` is required\"); // if (isDefined(props[propName]) && typeof props[propName] !== \"number\") return new Error(\"prop `xValue` accepts a number\");\n  }\n};\nStraightLine.defaultProps = {\n  className: \"line \",\n  type: \"horizontal\",\n  stroke: \"#000000\",\n  opacity: 0.5,\n  strokeWidth: 1,\n  strokeDasharray: \"Solid\"\n};\nexports.default = StraightLine;","map":null,"metadata":{},"sourceType":"script"}