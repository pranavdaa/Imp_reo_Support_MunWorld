{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _d3TimeFormat = require(\"d3-time-format\");\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _utils = require(\"../utils\");\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar OHLCTooltip = function (_Component) {\n  _inherits(OHLCTooltip, _Component);\n\n  function OHLCTooltip(props) {\n    _classCallCheck(this, OHLCTooltip);\n\n    var _this = _possibleConstructorReturn(this, (OHLCTooltip.__proto__ || Object.getPrototypeOf(OHLCTooltip)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    return _this;\n  }\n\n  _createClass(OHLCTooltip, [{\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var displayValuesFor = this.props.displayValuesFor;\n      var _props = this.props,\n          xDisplayFormat = _props.xDisplayFormat,\n          accessor = _props.accessor,\n          volumeFormat = _props.volumeFormat,\n          ohlcFormat = _props.ohlcFormat,\n          percentFormat = _props.percentFormat,\n          displayTexts = _props.displayTexts;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          width = _moreProps$chartConfi.width,\n          height = _moreProps$chartConfi.height;\n      var displayXAccessor = moreProps.displayXAccessor;\n      var currentItem = displayValuesFor(this.props, moreProps);\n      var displayDate = void 0,\n          open = void 0,\n          high = void 0,\n          low = void 0,\n          close = void 0,\n          volume = void 0,\n          percent = void 0;\n      displayDate = open = high = low = close = volume = percent = displayTexts.na;\n\n      if ((0, _utils.isDefined)(currentItem) && (0, _utils.isDefined)(accessor(currentItem))) {\n        var item = accessor(currentItem);\n        volume = (0, _utils.isDefined)(item.volume) ? volumeFormat(item.volume) : displayTexts.na;\n        displayDate = xDisplayFormat(displayXAccessor(item));\n        open = ohlcFormat(item.open);\n        high = ohlcFormat(item.high);\n        low = ohlcFormat(item.low);\n        close = ohlcFormat(item.close);\n        percent = percentFormat((item.close - item.open) / item.open);\n      }\n\n      var originProp = this.props.origin;\n      var origin = (0, _utils.functor)(originProp);\n\n      var _origin = origin(width, height),\n          _origin2 = _slicedToArray(_origin, 2),\n          x = _origin2[0],\n          y = _origin2[1];\n\n      var itemsToDisplay = {\n        displayDate: displayDate,\n        open: open,\n        high: high,\n        low: low,\n        close: close,\n        percent: percent,\n        volume: volume,\n        x: x,\n        y: y\n      };\n      return this.props.children(this.props, moreProps, itemsToDisplay);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    }\n  }]);\n\n  return OHLCTooltip;\n}(_react.Component);\n\nOHLCTooltip.propTypes = {\n  className: _propTypes2.default.string,\n  accessor: _propTypes2.default.func,\n  xDisplayFormat: _propTypes2.default.func,\n  children: _propTypes2.default.func,\n  volumeFormat: _propTypes2.default.func,\n  percentFormat: _propTypes2.default.func,\n  ohlcFormat: _propTypes2.default.func,\n  origin: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func]),\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  onClick: _propTypes2.default.func,\n  displayValuesFor: _propTypes2.default.func,\n  textFill: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string,\n  displayTexts: _propTypes2.default.object\n};\nvar displayTextsDefault = {\n  d: \"Date: \",\n  o: \" O: \",\n  h: \" H: \",\n  l: \" L: \",\n  c: \" C: \",\n  v: \" Vol: \",\n  na: \"n/a\"\n};\nOHLCTooltip.defaultProps = {\n  accessor: function accessor(d) {\n    return {\n      date: d.date,\n      open: d.open,\n      high: d.high,\n      low: d.low,\n      close: d.close,\n      volume: d.volume\n    };\n  },\n  xDisplayFormat: (0, _d3TimeFormat.timeFormat)(\"%Y-%m-%d\"),\n  volumeFormat: (0, _d3Format.format)(\".4s\"),\n  percentFormat: (0, _d3Format.format)(\".2%\"),\n  ohlcFormat: (0, _d3Format.format)(\".2f\"),\n  displayValuesFor: _displayValuesFor2.default,\n  origin: [0, 0],\n  children: defaultDisplay,\n  displayTexts: displayTextsDefault\n};\n\nfunction defaultDisplay(props, moreProps, itemsToDisplay) {\n  /* eslint-disable */\n  var className = props.className,\n      textFill = props.textFill,\n      labelFill = props.labelFill,\n      onClick = props.onClick,\n      fontFamily = props.fontFamily,\n      fontSize = props.fontSize,\n      displayTexts = props.displayTexts;\n  /* eslint-enable */\n\n  var displayDate = itemsToDisplay.displayDate,\n      open = itemsToDisplay.open,\n      high = itemsToDisplay.high,\n      low = itemsToDisplay.low,\n      close = itemsToDisplay.close,\n      volume = itemsToDisplay.volume,\n      x = itemsToDisplay.x,\n      y = itemsToDisplay.y;\n  return _react2.default.createElement(\"g\", {\n    className: \"react-stockcharts-tooltip-hover \" + className,\n    transform: \"translate(\" + x + \", \" + y + \")\",\n    onClick: onClick\n  }, _react2.default.createElement(_ToolTipText2.default, {\n    x: 0,\n    y: 0,\n    fontFamily: fontFamily,\n    fontSize: fontSize\n  }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label\",\n    x: 0,\n    dy: \"5\"\n  }, displayTexts.d), _react2.default.createElement(\"tspan\", {\n    key: \"value\",\n    fill: textFill\n  }, displayDate), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_O\"\n  }, displayTexts.o), _react2.default.createElement(\"tspan\", {\n    key: \"value_O\",\n    fill: textFill\n  }, open), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_H\"\n  }, displayTexts.h), _react2.default.createElement(\"tspan\", {\n    key: \"value_H\",\n    fill: textFill\n  }, high), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_L\"\n  }, displayTexts.l), _react2.default.createElement(\"tspan\", {\n    key: \"value_L\",\n    fill: textFill\n  }, low), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_C\"\n  }, displayTexts.c), _react2.default.createElement(\"tspan\", {\n    key: \"value_C\",\n    fill: textFill\n  }, close), _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n    fill: labelFill,\n    key: \"label_Vol\"\n  }, displayTexts.v), _react2.default.createElement(\"tspan\", {\n    key: \"value_Vol\",\n    fill: textFill\n  }, volume)));\n}\n\nexports.default = OHLCTooltip;","map":null,"metadata":{},"sourceType":"script"}