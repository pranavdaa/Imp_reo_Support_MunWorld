{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Force = require(\"d3-force\");\n\nvar _d3Array = require(\"d3-array\");\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _AxisZoomCapture = require(\"./AxisZoomCapture\");\n\nvar _AxisZoomCapture2 = _interopRequireDefault(_AxisZoomCapture);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Axis = function (_Component) {\n  _inherits(Axis, _Component);\n\n  function Axis(props) {\n    _classCallCheck(this, Axis);\n\n    var _this = _possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.saveNode = _this.saveNode.bind(_this);\n    _this.getMoreProps = _this.getMoreProps.bind(_this);\n    return _this;\n  }\n\n  _createClass(Axis, [{\n    key: \"saveNode\",\n    value: function saveNode(node) {\n      this.node = node;\n    }\n  }, {\n    key: \"getMoreProps\",\n    value: function getMoreProps() {\n      return this.node.getMoreProps();\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          showDomain = _props.showDomain,\n          showTicks = _props.showTicks,\n          transform = _props.transform,\n          range = _props.range,\n          getScale = _props.getScale;\n      ctx.save();\n      ctx.translate(transform[0], transform[1]);\n      if (showDomain) drawAxisLine(ctx, this.props, range);\n\n      if (showTicks) {\n        var tickProps = tickHelper(this.props, getScale(moreProps));\n        drawTicks(ctx, tickProps);\n      }\n\n      ctx.restore();\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var className = this.props.className;\n      var _props2 = this.props,\n          showDomain = _props2.showDomain,\n          showTicks = _props2.showTicks,\n          range = _props2.range,\n          getScale = _props2.getScale;\n      var ticks = showTicks ? axisTicksSVG(this.props, getScale(moreProps)) : null;\n      var domain = showDomain ? axisLineSVG(this.props, range) : null;\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, ticks, domain);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props3 = this.props,\n          bg = _props3.bg,\n          axisZoomCallback = _props3.axisZoomCallback,\n          className = _props3.className,\n          zoomCursorClassName = _props3.zoomCursorClassName,\n          zoomEnabled = _props3.zoomEnabled,\n          getScale = _props3.getScale,\n          inverted = _props3.inverted;\n      var _props4 = this.props,\n          transform = _props4.transform,\n          getMouseDelta = _props4.getMouseDelta,\n          edgeClip = _props4.edgeClip;\n      var _props5 = this.props,\n          onContextMenu = _props5.onContextMenu,\n          onDoubleClick = _props5.onDoubleClick;\n      var zoomCapture = zoomEnabled ? _react2.default.createElement(_AxisZoomCapture2.default, {\n        bg: bg,\n        getScale: getScale,\n        getMoreProps: this.getMoreProps,\n        getMouseDelta: getMouseDelta,\n        axisZoomCallback: axisZoomCallback,\n        className: className,\n        zoomCursorClassName: zoomCursorClassName,\n        inverted: inverted,\n        onContextMenu: onContextMenu,\n        onDoubleClick: onDoubleClick\n      }) : null;\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + transform[0] + \", \" + transform[1] + \")\"\n      }, zoomCapture, _react2.default.createElement(_GenericChartComponent2.default, {\n        ref: this.saveNode,\n        canvasToDraw: _GenericComponent.getAxisCanvas,\n        clip: false,\n        edgeClip: edgeClip,\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        drawOn: [\"pan\"]\n      }));\n    }\n  }]);\n\n  return Axis;\n}(_react.Component);\n\nAxis.propTypes = {\n  innerTickSize: _propTypes2.default.number,\n  outerTickSize: _propTypes2.default.number,\n  tickFormat: _propTypes2.default.func,\n  tickPadding: _propTypes2.default.number,\n  tickSize: _propTypes2.default.number,\n  ticks: _propTypes2.default.number,\n  tickLabelFill: _propTypes2.default.string,\n  tickStroke: _propTypes2.default.string,\n  tickStrokeOpacity: _propTypes2.default.number,\n  tickStrokeWidth: _propTypes2.default.number,\n  tickStrokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  tickValues: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func]),\n  tickInterval: _propTypes2.default.number,\n  tickIntervalFunction: _propTypes2.default.func,\n  showDomain: _propTypes2.default.bool,\n  showTicks: _propTypes2.default.bool,\n  className: _propTypes2.default.string,\n  axisZoomCallback: _propTypes2.default.func,\n  zoomEnabled: _propTypes2.default.bool,\n  inverted: _propTypes2.default.bool,\n  zoomCursorClassName: _propTypes2.default.string,\n  transform: _propTypes2.default.arrayOf(_propTypes2.default.number).isRequired,\n  range: _propTypes2.default.arrayOf(_propTypes2.default.number).isRequired,\n  getMouseDelta: _propTypes2.default.func.isRequired,\n  getScale: _propTypes2.default.func.isRequired,\n  bg: _propTypes2.default.object.isRequired,\n  edgeClip: _propTypes2.default.bool.isRequired,\n  onContextMenu: _propTypes2.default.func,\n  onDoubleClick: _propTypes2.default.func\n};\nAxis.defaultProps = {\n  zoomEnabled: false,\n  zoomCursorClassName: \"\",\n  edgeClip: false\n};\n\nfunction tickHelper(props, scale) {\n  var orient = props.orient,\n      innerTickSize = props.innerTickSize,\n      tickFormat = props.tickFormat,\n      tickPadding = props.tickPadding,\n      tickLabelFill = props.tickLabelFill,\n      tickStrokeWidth = props.tickStrokeWidth,\n      tickStrokeDasharray = props.tickStrokeDasharray,\n      fontSize = props.fontSize,\n      fontFamily = props.fontFamily,\n      fontWeight = props.fontWeight,\n      showTicks = props.showTicks,\n      flexTicks = props.flexTicks,\n      showTickLabel = props.showTickLabel;\n  var tickArguments = props.ticks,\n      tickValuesProp = props.tickValues,\n      tickStroke = props.tickStroke,\n      tickStrokeOpacity = props.tickStrokeOpacity,\n      tickInterval = props.tickInterval,\n      tickIntervalFunction = props.tickIntervalFunction; // if (tickArguments) tickArguments = [tickArguments];\n\n  var tickValues = void 0;\n\n  if ((0, _utils.isDefined)(tickValuesProp)) {\n    if (typeof tickValuesProp === \"function\") {\n      tickValues = tickValuesProp(scale.domain());\n    } else {\n      tickValues = tickValuesProp;\n    }\n  } else if ((0, _utils.isDefined)(tickInterval)) {\n    var _scale$domain = scale.domain(),\n        _scale$domain2 = _slicedToArray(_scale$domain, 2),\n        min = _scale$domain2[0],\n        max = _scale$domain2[1];\n\n    var baseTickValues = (0, _d3Array.range)(min, max, (max - min) / tickInterval);\n    tickValues = tickIntervalFunction ? tickIntervalFunction(min, max, tickInterval) : baseTickValues;\n  } else if ((0, _utils.isDefined)(scale.ticks)) {\n    tickValues = scale.ticks(tickArguments, flexTicks);\n  } else {\n    tickValues = scale.domain();\n  }\n\n  var baseFormat = scale.tickFormat ? scale.tickFormat(tickArguments) : _utils.identity;\n  var format = (0, _utils.isNotDefined)(tickFormat) ? baseFormat : function (d) {\n    return tickFormat(d) || \"\";\n  };\n  var sign = orient === \"top\" || orient === \"left\" ? -1 : 1;\n  var tickSpacing = Math.max(innerTickSize, 0) + tickPadding;\n  var ticks = void 0,\n      dy = void 0,\n      canvas_dy = void 0,\n      textAnchor = void 0;\n\n  if (orient === \"bottom\" || orient === \"top\") {\n    dy = sign < 0 ? \"0em\" : \".71em\";\n    canvas_dy = sign < 0 ? 0 : fontSize * .71;\n    textAnchor = \"middle\";\n    ticks = tickValues.map(function (d) {\n      var x = Math.round(scale(d));\n      return {\n        value: d,\n        x1: x,\n        y1: 0,\n        x2: x,\n        y2: sign * innerTickSize,\n        labelX: x,\n        labelY: sign * tickSpacing\n      };\n    });\n\n    if (showTicks && flexTicks) {\n      // console.log(ticks, showTicks);\n      var nodes = ticks.map(function (d) {\n        return {\n          id: d.value,\n          value: d.value,\n          fy: d.y2,\n          origX: d.x1\n        };\n      });\n      var simulation = (0, _d3Force.forceSimulation)(nodes).force(\"x\", (0, _d3Force.forceX)(function (d) {\n        return d.origX;\n      }).strength(1)).force(\"collide\", (0, _d3Force.forceCollide)(22)) // .force(\"center\", forceCenter())\n      .stop();\n\n      for (var i = 0; i < 100; ++i) {\n        simulation.tick();\n      } // console.log(nodes);\n\n\n      var zip = (0, _utils.zipper)().combine(function (a, b) {\n        if (Math.abs(b.x - b.origX) > 0.01) {\n          return _extends({}, a, {\n            x2: b.x,\n            labelX: b.x\n          });\n        }\n\n        return a;\n      });\n      ticks = zip(ticks, nodes);\n    }\n  } else {\n    ticks = tickValues.map(function (d) {\n      var y = Math.round(scale(d));\n      return {\n        value: d,\n        x1: 0,\n        y1: y,\n        x2: sign * innerTickSize,\n        y2: y,\n        labelX: sign * tickSpacing,\n        labelY: y\n      };\n    });\n    dy = \".32em\";\n    canvas_dy = fontSize * .32;\n    textAnchor = sign < 0 ? \"end\" : \"start\";\n  }\n\n  return {\n    ticks: ticks,\n    scale: scale,\n    tickStroke: tickStroke,\n    tickLabelFill: tickLabelFill || tickStroke,\n    tickStrokeOpacity: tickStrokeOpacity,\n    tickStrokeWidth: tickStrokeWidth,\n    tickStrokeDasharray: tickStrokeDasharray,\n    dy: dy,\n    canvas_dy: canvas_dy,\n    textAnchor: textAnchor,\n    fontSize: fontSize,\n    fontFamily: fontFamily,\n    fontWeight: fontWeight,\n    format: format,\n    showTickLabel: showTickLabel\n  };\n}\n/* eslint-disable react/prop-types */\n\n\nfunction axisLineSVG(props, range) {\n  var orient = props.orient,\n      outerTickSize = props.outerTickSize;\n  var domainClassName = props.domainClassName,\n      fill = props.fill,\n      stroke = props.stroke,\n      strokeWidth = props.strokeWidth,\n      opacity = props.opacity;\n  var sign = orient === \"top\" || orient === \"left\" ? -1 : 1;\n  var d = void 0;\n\n  if (orient === \"bottom\" || orient === \"top\") {\n    d = \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize;\n  } else {\n    d = \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize;\n  }\n\n  return _react2.default.createElement(\"path\", {\n    className: domainClassName,\n    d: d,\n    fill: fill,\n    opacity: opacity,\n    stroke: stroke,\n    strokeWidth: strokeWidth\n  });\n}\n/* eslint-enable react/prop-types */\n\n\nfunction drawAxisLine(ctx, props, range) {\n  // props = { ...AxisLine.defaultProps, ...props };\n  var orient = props.orient,\n      outerTickSize = props.outerTickSize,\n      stroke = props.stroke,\n      strokeWidth = props.strokeWidth,\n      opacity = props.opacity;\n  var sign = orient === \"top\" || orient === \"left\" ? -1 : 1;\n  var xAxis = orient === \"bottom\" || orient === \"top\"; // var range = d3_scaleRange(xAxis ? xScale : yScale);\n\n  ctx.lineWidth = strokeWidth;\n  ctx.strokeStyle = (0, _utils.hexToRGBA)(stroke, opacity);\n  ctx.beginPath();\n\n  if (xAxis) {\n    ctx.moveTo((0, _utils.first)(range), sign * outerTickSize);\n    ctx.lineTo((0, _utils.first)(range), 0);\n    ctx.lineTo((0, _utils.last)(range), 0);\n    ctx.lineTo((0, _utils.last)(range), sign * outerTickSize);\n  } else {\n    ctx.moveTo(sign * outerTickSize, (0, _utils.first)(range));\n    ctx.lineTo(0, (0, _utils.first)(range));\n    ctx.lineTo(0, (0, _utils.last)(range));\n    ctx.lineTo(sign * outerTickSize, (0, _utils.last)(range));\n  }\n\n  ctx.stroke();\n}\n\nfunction Tick(props) {\n  var tickLabelFill = props.tickLabelFill,\n      tickStroke = props.tickStroke,\n      tickStrokeOpacity = props.tickStrokeOpacity,\n      tickStrokeDasharray = props.tickStrokeDasharray,\n      tickStrokeWidth = props.tickStrokeWidth,\n      textAnchor = props.textAnchor,\n      fontSize = props.fontSize,\n      fontFamily = props.fontFamily,\n      fontWeight = props.fontWeight;\n  var x1 = props.x1,\n      y1 = props.y1,\n      x2 = props.x2,\n      y2 = props.y2,\n      labelX = props.labelX,\n      labelY = props.labelY,\n      dy = props.dy;\n  return _react2.default.createElement(\"g\", {\n    className: \"tick\"\n  }, _react2.default.createElement(\"line\", {\n    shapeRendering: \"crispEdges\",\n    opacity: tickStrokeOpacity,\n    stroke: tickStroke,\n    strokeWidth: tickStrokeWidth,\n    strokeDasharray: (0, _utils.getStrokeDasharray)(tickStrokeDasharray),\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2\n  }), _react2.default.createElement(\"text\", {\n    dy: dy,\n    x: labelX,\n    y: labelY,\n    fill: tickLabelFill,\n    fontSize: fontSize,\n    fontWeight: fontWeight,\n    fontFamily: fontFamily,\n    textAnchor: textAnchor\n  }, props.children));\n}\n\nTick.propTypes = {\n  children: _propTypes2.default.string.isRequired,\n  x1: _propTypes2.default.number.isRequired,\n  y1: _propTypes2.default.number.isRequired,\n  x2: _propTypes2.default.number.isRequired,\n  y2: _propTypes2.default.number.isRequired,\n  labelX: _propTypes2.default.number.isRequired,\n  labelY: _propTypes2.default.number.isRequired,\n  dy: _propTypes2.default.string.isRequired,\n  tickStroke: _propTypes2.default.string,\n  tickLabelFill: _propTypes2.default.string,\n  tickStrokeWidth: _propTypes2.default.number,\n  tickStrokeOpacity: _propTypes2.default.number,\n  tickStrokeDasharray: _propTypes2.default.oneOf(_utils.strokeDashTypes),\n  textAnchor: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  fontFamily: _propTypes2.default.string,\n  fontWeight: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])\n};\n\nfunction axisTicksSVG(props, scale) {\n  var result = tickHelper(props, scale);\n  var tickLabelFill = result.tickLabelFill,\n      tickStroke = result.tickStroke,\n      tickStrokeOpacity = result.tickStrokeOpacity,\n      tickStrokeWidth = result.tickStrokeWidth,\n      tickStrokeDasharray = result.tickStrokeDasharray,\n      textAnchor = result.textAnchor;\n  var fontSize = result.fontSize,\n      fontFamily = result.fontFamily,\n      fontWeight = result.fontWeight,\n      ticks = result.ticks,\n      format = result.format;\n  var dy = result.dy;\n  return _react2.default.createElement(\"g\", null, ticks.map(function (tick, idx) {\n    return _react2.default.createElement(Tick, {\n      key: idx,\n      tickStroke: tickStroke,\n      tickLabelFill: tickLabelFill,\n      tickStrokeWidth: tickStrokeWidth,\n      tickStrokeOpacity: tickStrokeOpacity,\n      tickStrokeDasharray: tickStrokeDasharray,\n      dy: dy,\n      x1: tick.x1,\n      y1: tick.y1,\n      x2: tick.x2,\n      y2: tick.y2,\n      labelX: tick.labelX,\n      labelY: tick.labelY,\n      textAnchor: textAnchor,\n      fontSize: fontSize,\n      fontWeight: fontWeight,\n      fontFamily: fontFamily\n    }, format(tick.value));\n  }));\n}\n\nfunction drawTicks(ctx, result) {\n  var tickStroke = result.tickStroke,\n      tickStrokeOpacity = result.tickStrokeOpacity,\n      tickLabelFill = result.tickLabelFill;\n  var textAnchor = result.textAnchor,\n      fontSize = result.fontSize,\n      fontFamily = result.fontFamily,\n      fontWeight = result.fontWeight,\n      ticks = result.ticks,\n      showTickLabel = result.showTickLabel;\n  ctx.strokeStyle = (0, _utils.hexToRGBA)(tickStroke, tickStrokeOpacity);\n  ctx.fillStyle = tickStroke; // ctx.textBaseline = 'middle';\n\n  ticks.forEach(function (tick) {\n    drawEachTick(ctx, tick, result);\n  });\n  ctx.font = fontWeight + \" \" + fontSize + \"px \" + fontFamily;\n  ctx.fillStyle = tickLabelFill;\n  ctx.textAlign = textAnchor === \"middle\" ? \"center\" : textAnchor;\n\n  if (showTickLabel) {\n    ticks.forEach(function (tick) {\n      drawEachTickLabel(ctx, tick, result);\n    });\n  }\n}\n\nfunction drawEachTick(ctx, tick, result) {\n  var tickStrokeWidth = result.tickStrokeWidth,\n      tickStrokeDasharray = result.tickStrokeDasharray;\n  ctx.beginPath();\n  ctx.moveTo(tick.x1, tick.y1);\n  ctx.lineTo(tick.x2, tick.y2);\n  ctx.lineWidth = tickStrokeWidth;\n  ctx.setLineDash((0, _utils.getStrokeDasharray)(tickStrokeDasharray).split(\",\"));\n  ctx.stroke();\n}\n\nfunction drawEachTickLabel(ctx, tick, result) {\n  var canvas_dy = result.canvas_dy,\n      format = result.format;\n  ctx.beginPath();\n  ctx.fillText(format(tick.value), tick.labelX, tick.labelY + canvas_dy);\n}\n\nexports.default = Axis;","map":null,"metadata":{},"sourceType":"script"}