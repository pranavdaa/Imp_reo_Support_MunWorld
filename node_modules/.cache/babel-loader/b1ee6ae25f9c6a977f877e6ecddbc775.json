{"ast":null,"code":"import \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport _classCallCheck from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/pages/pages/register/RegisterForm/index.js\";\nimport React from 'react';\nvar FormItem = _Form.Item;\n\nvar RegisterFormComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RegisterFormComponent, _React$Component);\n\n  function RegisterFormComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RegisterFormComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RegisterFormComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      confirmDirty: false\n    };\n\n    _this.handleConfirmBlur = function (e) {\n      var value = e.target.value;\n      var confirmDirty = _this.state.confirmDirty;\n\n      _this.setState({\n        confirmDirty: confirmDirty || !!value\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault(); // const { form } = this.props\n      // form.validateFields((err, values) => {\n      // })\n    };\n\n    _this.compareToFirstPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n\n      if (value && value !== form.getFieldValue('password')) {\n        callback('Two passwords that you enter is inconsistent!');\n      } else {\n        callback();\n      }\n    };\n\n    _this.validateToNextPassword = function (rule, value, callback) {\n      var form = _this.props.form;\n      var confirmDirty = _this.state.confirmDirty;\n\n      if (value && confirmDirty) {\n        form.validateFields(['confirm'], {\n          force: true\n        });\n      }\n\n      callback();\n    };\n\n    return _this;\n  }\n\n  _createClass(RegisterFormComponent, [{\n    key: \"render\",\n    value: function render() {\n      var form = this.props.form;\n      return React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        validateStatus: \"validating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, form.getFieldDecorator('Nickname', {\n        rules: [{\n          required: true,\n          message: 'Please input your Nickname!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }),\n        placeholder: \"Email or Nickname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, form.getFieldDecorator('password', {\n        rules: [{\n          required: true\n        }, {\n          validator: this.validateToNextPassword\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }),\n        type: \"password\",\n        placeholder: \"Input your password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, form.getFieldDecorator('confirm', {\n        rules: [{\n          required: true\n        }, {\n          validator: this.compareToFirstPassword\n        }]\n      })(React.createElement(_Input, {\n        type: \"password\",\n        onBlur: this.handleConfirmBlur,\n        placeholder: \"Confirm your password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Sign Up\"), React.createElement(\"span\", {\n        className: \"ml-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, form.getFieldDecorator('mailsubscription', {\n        valuePropName: 'checked',\n        initialValue: true\n      })(React.createElement(_Checkbox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Mail Subscription\")))));\n    }\n  }]);\n\n  return RegisterFormComponent;\n}(React.Component);\n\nvar RegisterForm = _Form.create()(RegisterFormComponent);\n\nexport default RegisterForm;","map":{"version":3,"sources":["/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/pages/pages/register/RegisterForm/index.js"],"names":["React","FormItem","Item","RegisterFormComponent","state","confirmDirty","handleConfirmBlur","e","value","target","setState","handleSubmit","preventDefault","compareToFirstPassword","rule","callback","form","props","getFieldValue","validateToNextPassword","validateFields","force","getFieldDecorator","rules","required","message","color","validator","valuePropName","initialValue","Component","RegisterForm","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Input, Icon, Checkbox, Button } from 'antd'\n\nconst FormItem = Form.Item\n\nclass RegisterFormComponent extends React.Component {\n  state = {\n    confirmDirty: false,\n  }\n\n  handleConfirmBlur = e => {\n    const { value } = e.target\n    const { confirmDirty } = this.state\n    this.setState({\n      confirmDirty: confirmDirty || !!value,\n    })\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    // const { form } = this.props\n    // form.validateFields((err, values) => {\n    // })\n  }\n\n  compareToFirstPassword = (rule, value, callback) => {\n    const { form } = this.props\n    if (value && value !== form.getFieldValue('password')) {\n      callback('Two passwords that you enter is inconsistent!')\n    } else {\n      callback()\n    }\n  }\n\n  validateToNextPassword = (rule, value, callback) => {\n    const { form } = this.props\n    const { confirmDirty } = this.state\n    if (value && confirmDirty) {\n      form.validateFields(['confirm'], { force: true })\n    }\n    callback()\n  }\n\n  render() {\n    const { form } = this.props\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <FormItem validateStatus=\"validating\">\n          {form.getFieldDecorator('Nickname', {\n            rules: [{ required: true, message: 'Please input your Nickname!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Email or Nickname\"\n            />,\n          )}\n        </FormItem>\n        <FormItem>\n          {form.getFieldDecorator('password', {\n            rules: [\n              {\n                required: true,\n              },\n              {\n                validator: this.validateToNextPassword,\n              },\n            ],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Input your password\"\n            />,\n          )}\n        </FormItem>\n        <FormItem>\n          {form.getFieldDecorator('confirm', {\n            rules: [\n              {\n                required: true,\n              },\n              {\n                validator: this.compareToFirstPassword,\n              },\n            ],\n          })(\n            <Input\n              type=\"password\"\n              onBlur={this.handleConfirmBlur}\n              placeholder=\"Confirm your password\"\n            />,\n          )}\n        </FormItem>\n\n        <div className=\"form-actions\">\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            Sign Up\n          </Button>\n          <span className=\"ml-3\">\n            {form.getFieldDecorator('mailsubscription', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(<Checkbox>Mail Subscription</Checkbox>)}\n          </span>\n        </div>\n      </Form>\n    )\n  }\n}\n\nconst RegisterForm = Form.create()(RegisterFormComponent)\nexport default RegisterForm\n"]},"metadata":{},"sourceType":"module"}