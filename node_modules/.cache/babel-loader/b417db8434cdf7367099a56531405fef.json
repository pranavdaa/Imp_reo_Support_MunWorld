{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { area, line, curveMonotoneX } from 'd3-shape';\nimport { scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nvar curveFunction = curveMonotoneX;\nvar defaultColors = {\n  area: 'rgba(199, 228, 255, 0.5)',\n  line: '#004585'\n};\n\nvar Sparkline = function (_PureComponent) {\n  _inherits(Sparkline, _PureComponent);\n\n  function Sparkline() {\n    _classCallCheck(this, Sparkline);\n\n    return _possibleConstructorReturn(this, (Sparkline.__proto__ || _Object$getPrototypeOf(Sparkline)).apply(this, arguments));\n  }\n\n  _createClass(Sparkline, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          lines = _props.lines,\n          width = _props.width,\n          height = _props.height;\n      var maxX = max(lines, function (s) {\n        return s.values.length - 1;\n      });\n      var maxY = max(lines, function (s) {\n        return max(s.values);\n      });\n      var x = scaleLinear().domain([0, maxX]).range([0, width]); // Set range to 1 to make room for the line stroke\n\n      var y = scaleLinear().domain([0, maxY]).range([height, 1]);\n      var areaFunction = area().x(function (d, i) {\n        return x(i);\n      }).y0(height).y1(function (d) {\n        return y(d);\n      }).curve(curveFunction);\n      var lineFunction = line().x(function (d, i) {\n        return x(i);\n      }).y(function (d) {\n        return y(d);\n      }).curve(curveFunction);\n      return React.createElement('svg', {\n        width: width,\n        height: height,\n        viewBox: '0 0 ' + width + ' ' + height\n      }, lines.map(function (line, index) {\n        var colors = _extends({}, defaultColors, line.colors);\n\n        return React.createElement('g', {\n          key: line.key || index\n        }, React.createElement('path', {\n          d: areaFunction(line.values),\n          fill: colors.area\n        }, line.title && React.createElement('title', null, line.title)), React.createElement('path', {\n          d: lineFunction(line.values),\n          stroke: colors.line,\n          fill: 'none'\n        }));\n      }));\n    }\n  }]);\n\n  return Sparkline;\n}(PureComponent);\n\nSparkline.displayName = 'Sparkline';\nSparkline.propTypes = {\n  lines: PropTypes.arrayOf(PropTypes.shape({\n    values: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n    colors: PropTypes.shape({\n      area: PropTypes.string.isRequired,\n      line: PropTypes.string.isRequired\n    }),\n    title: PropTypes.string,\n    key: PropTypes.any\n  })).isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\nexport default Sparkline;","map":null,"metadata":{},"sourceType":"module"}