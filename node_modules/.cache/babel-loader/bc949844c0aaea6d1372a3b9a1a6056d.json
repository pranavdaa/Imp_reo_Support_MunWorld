{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _GenericComponent = require(\"../GenericComponent\");\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SARSeries = function (_Component) {\n  _inherits(SARSeries, _Component);\n\n  function SARSeries(props) {\n    _classCallCheck(this, SARSeries);\n\n    var _this = _possibleConstructorReturn(this, (SARSeries.__proto__ || Object.getPrototypeOf(SARSeries)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    _this.drawOnCanvas = _this.drawOnCanvas.bind(_this);\n    _this.isHover = _this.isHover.bind(_this);\n    return _this;\n  }\n\n  _createClass(SARSeries, [{\n    key: \"isHover\",\n    value: function isHover(moreProps) {\n      var mouseXY = moreProps.mouseXY,\n          currentItem = moreProps.currentItem,\n          yScale = moreProps.chartConfig.yScale;\n      var yAccessor = this.props.yAccessor;\n      var y = mouseXY[1];\n      var currentY = yScale(yAccessor(currentItem));\n      return y < currentY + 5 && y > currentY - 5;\n    }\n  }, {\n    key: \"drawOnCanvas\",\n    value: function drawOnCanvas(ctx, moreProps) {\n      var _props = this.props,\n          yAccessor = _props.yAccessor,\n          fill = _props.fill,\n          opacity = _props.opacity;\n      var xAccessor = moreProps.xAccessor,\n          plotData = moreProps.plotData,\n          xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale,\n          hovering = moreProps.hovering;\n      var width = xScale(xAccessor((0, _utils.last)(plotData))) - xScale(xAccessor((0, _utils.first)(plotData)));\n      var d = width / plotData.length * 0.5 / 2;\n      var radius = Math.min(2, Math.max(0.5, d)) + (hovering ? 2 : 0);\n      plotData.forEach(function (each) {\n        var centerX = xScale(xAccessor(each));\n        var centerY = yScale(yAccessor(each));\n        var color = yAccessor(each) > each.close ? fill.falling : fill.rising;\n        ctx.fillStyle = (0, _utils.hexToRGBA)(color, opacity);\n        ctx.strokeStyle = color;\n        ctx.beginPath();\n        ctx.ellipse(centerX, centerY, radius, radius, 0, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n      });\n    }\n  }, {\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props2 = this.props,\n          className = _props2.className,\n          yAccessor = _props2.yAccessor;\n      var xAccessor = moreProps.xAccessor,\n          plotData = moreProps.plotData,\n          xScale = moreProps.xScale,\n          yScale = moreProps.chartConfig.yScale; // console.log(moreProps);\n\n      return _react2.default.createElement(\"g\", {\n        className: className\n      }, plotData.filter(function (each) {\n        return (0, _utils.isDefined)(yAccessor(each));\n      }).map(function (each, idx) {\n        return _react2.default.createElement(\"circle\", {\n          key: idx,\n          cx: xScale(xAccessor(each)),\n          cy: yScale(yAccessor(each)),\n          r: 3,\n          fill: \"green\"\n        });\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var highlightOnHover = this.props.highlightOnHover;\n      var hoverProps = highlightOnHover ? {\n        isHover: this.isHover,\n        drawOn: [\"mousemove\", \"pan\"],\n        canvasToDraw: _GenericComponent.getMouseCanvas\n      } : {\n        drawOn: [\"pan\"],\n        canvasToDraw: _GenericComponent.getAxisCanvas\n      };\n      return _react2.default.createElement(_GenericChartComponent2.default, _extends({\n        svgDraw: this.renderSVG,\n        canvasDraw: this.drawOnCanvas,\n        onClickWhenHover: this.props.onClick,\n        onDoubleClickWhenHover: this.props.onDoubleClick,\n        onContextMenuWhenHover: this.props.onContextMenu\n      }, hoverProps));\n    }\n  }]);\n\n  return SARSeries;\n}(_react.Component);\n\nSARSeries.propTypes = {\n  className: _propTypes2.default.string,\n  fill: _propTypes2.default.object.isRequired,\n  yAccessor: _propTypes2.default.func.isRequired,\n  opacity: _propTypes2.default.number.isRequired,\n  onClick: _propTypes2.default.func,\n  onDoubleClick: _propTypes2.default.func,\n  onContextMenu: _propTypes2.default.func,\n  highlightOnHover: _propTypes2.default.bool\n};\nSARSeries.defaultProps = {\n  className: \"react-stockcharts-sar\",\n  fill: {\n    falling: \"#4682B4\",\n    rising: \"#15EC2E\"\n  },\n  highlightOnHover: true,\n  opacity: 0.2,\n  onClick: function onClick(e) {\n    console.log(\"Click\", e);\n  },\n  onDoubleClick: function onDoubleClick(e) {\n    console.log(\"Double Click\", e);\n  },\n  onContextMenu: function onContextMenu(e) {\n    console.log(\"Right Click\", e);\n  }\n};\nexports.default = SARSeries;","map":null,"metadata":{},"sourceType":"script"}