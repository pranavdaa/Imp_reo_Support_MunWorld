{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.default = function () {\n  var macdSource = void 0,\n      emaSource = void 0;\n  var base = (0, _baseIndicator2.default)().type(ALGORITHM_TYPE) // .stroke(d => stroke[d.elderImpulse])\n  .stroke(_defaultOptionsForAppearance.ElderImpulse.stroke).fill(undefined);\n  var underlyingAlgorithm = (0, _utils.slidingWindow)().windowSize(2).undefinedValue(\"neutral\").accumulator(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        prev = _ref2[0],\n        curr = _ref2[1];\n\n    if ((0, _utils.isNotDefined)(macdSource)) throw new Error(\"macdSource not defined for \" + ALGORITHM_TYPE + \" calculator\");\n    if ((0, _utils.isNotDefined)(emaSource)) throw new Error(\"emaSource not defined for \" + ALGORITHM_TYPE + \" calculator\");\n\n    if ((0, _utils.isDefined)(macdSource(prev)) && (0, _utils.isDefined)(emaSource(prev))) {\n      var prevMACDDivergence = macdSource(prev).divergence;\n      var currMACDDivergence = macdSource(curr).divergence;\n      var prevEMA = emaSource(prev);\n      var currEMA = emaSource(curr);\n      if (currMACDDivergence >= prevMACDDivergence && currEMA >= prevEMA) return \"up\";\n      if (currMACDDivergence <= prevMACDDivergence && currEMA <= prevEMA) return \"down\";\n    }\n\n    return \"neutral\";\n  });\n  var mergedAlgorithm = (0, _utils.merge)().algorithm(underlyingAlgorithm).merge(function (datum, indicator) {\n    datum.elderImpulse = indicator;\n  }); // eslint-disable-next-line prefer-const\n\n  var indicator = function indicator(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      merge: true\n    };\n    var newData = options.merge ? mergedAlgorithm(data) : underlyingAlgorithm(data);\n    return newData;\n  };\n\n  indicator.macdSource = function (x) {\n    if (!arguments.length) return macdSource;\n    macdSource = x;\n    return indicator;\n  };\n\n  indicator.emaSource = function (x) {\n    if (!arguments.length) return emaSource;\n    emaSource = x;\n    return indicator;\n  };\n\n  (0, _utils.rebind)(indicator, base, \"id\", \"echo\", \"type\", \"stroke\"); // rebind(indicator, underlyingAlgorithm, \"windowSize\", \"movingAverageType\", \"multiplier\", \"source\");\n\n  (0, _utils.rebind)(indicator, mergedAlgorithm, \"merge\", \"skipUndefined\");\n  return indicator;\n};\n\nvar _utils = require(\"../utils\");\n\nvar _defaultOptionsForAppearance = require(\"./defaultOptionsForAppearance\");\n\nvar _baseIndicator = require(\"./baseIndicator\");\n\nvar _baseIndicator2 = _interopRequireDefault(_baseIndicator);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar ALGORITHM_TYPE = \"ElderImpulse\";","map":null,"metadata":{},"sourceType":"script"}