{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _d3Format = require(\"d3-format\");\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _utils = require(\"../utils\");\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RSITooltip = function (_Component) {\n  _inherits(RSITooltip, _Component);\n\n  function RSITooltip(props) {\n    _classCallCheck(this, RSITooltip);\n\n    var _this = _possibleConstructorReturn(this, (RSITooltip.__proto__ || Object.getPrototypeOf(RSITooltip)).call(this, props));\n\n    _this.renderSVG = _this.renderSVG.bind(_this);\n    return _this;\n  }\n\n  _createClass(RSITooltip, [{\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var _props = this.props,\n          onClick = _props.onClick,\n          fontFamily = _props.fontFamily,\n          fontSize = _props.fontSize,\n          yAccessor = _props.yAccessor,\n          displayFormat = _props.displayFormat,\n          className = _props.className;\n      var _props2 = this.props,\n          options = _props2.options,\n          labelFill = _props2.labelFill,\n          textFill = _props2.textFill;\n      var displayValuesFor = this.props.displayValuesFor;\n      var _moreProps$chartConfi = moreProps.chartConfig,\n          width = _moreProps$chartConfi.width,\n          height = _moreProps$chartConfi.height;\n      var currentItem = displayValuesFor(this.props, moreProps);\n      var rsi = (0, _utils.isDefined)(currentItem) && yAccessor(currentItem);\n      var value = rsi && displayFormat(rsi) || \"n/a\";\n      var originProp = this.props.origin;\n      var origin = (0, _utils.functor)(originProp);\n\n      var _origin = origin(width, height),\n          _origin2 = _slicedToArray(_origin, 2),\n          x = _origin2[0],\n          y = _origin2[1];\n\n      var tooltipLabel = \"RSI (\" + options.windowSize + \"): \";\n      return _react2.default.createElement(\"g\", {\n        className: className,\n        transform: \"translate(\" + x + \", \" + y + \")\",\n        onClick: onClick\n      }, _react2.default.createElement(_ToolTipText2.default, {\n        x: 0,\n        y: 0,\n        fontFamily: fontFamily,\n        fontSize: fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, tooltipLabel), _react2.default.createElement(\"tspan\", {\n        fill: textFill\n      }, value)));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    }\n  }]);\n\n  return RSITooltip;\n}(_react.Component);\n\nRSITooltip.propTypes = {\n  origin: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.func]).isRequired,\n  options: _propTypes2.default.shape({\n    windowSize: _propTypes2.default.number.isRequired\n  }).isRequired,\n  className: _propTypes2.default.string,\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  onClick: _propTypes2.default.func,\n  yAccessor: _propTypes2.default.func.isRequired,\n  displayFormat: _propTypes2.default.func.isRequired,\n  displayValuesFor: _propTypes2.default.func,\n  textFill: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string\n};\nRSITooltip.defaultProps = {\n  displayFormat: (0, _d3Format.format)(\".2f\"),\n  displayValuesFor: _displayValuesFor2.default,\n  origin: [0, 0],\n  className: \"react-stockcharts-tooltip\"\n};\nexports.default = RSITooltip;","map":null,"metadata":{},"sourceType":"script"}