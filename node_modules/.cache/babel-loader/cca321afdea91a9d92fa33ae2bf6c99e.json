{"ast":null,"code":"import _classCallCheck from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/layouts/index.js\";\n\nimport React, { Fragment } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport NProgress from 'nprogress';\nimport { Helmet } from 'react-helmet';\nimport Loader from 'components/LayoutComponents/Loader';\nimport PublicLayout from './Public';\nimport LoginLayout from './Login';\nimport MainLayout from './Main';\nvar Layouts = {\n  public: PublicLayout,\n  login: LoginLayout,\n  main: MainLayout\n};\nvar IndexLayout = (_dec = connect(function (_ref) {\n  var user = _ref.user;\n  return {\n    user: user\n  };\n}), withRouter(_class = _dec(_class = (_temp =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(IndexLayout, _React$PureComponent);\n\n  function IndexLayout() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, IndexLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(IndexLayout)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.previousPath = '';\n    return _this;\n  }\n\n  _createClass(IndexLayout, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var location = this.props.location;\n      var prevLocation = prevProps.prevLocation;\n\n      if (location !== prevLocation) {\n        window.scrollTo(0, 0);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          _this$props$location = _this$props.location,\n          pathname = _this$props$location.pathname,\n          search = _this$props$location.search,\n          user = _this$props.user; // NProgress Management\n\n      var currentPath = pathname + search;\n\n      if (currentPath !== this.previousPath) {\n        NProgress.start();\n      }\n\n      setTimeout(function () {\n        NProgress.done();\n        _this2.previousPath = currentPath;\n      }, 300); // Layout Rendering\n\n      var getLayout = function getLayout() {\n        if (pathname === '/') {\n          return 'public';\n        }\n\n        if (/^\\/user(?=\\/|$)/i.test(pathname)) {\n          return 'login';\n        }\n\n        return 'main';\n      };\n\n      var Container = Layouts[getLayout()];\n      var isUserAuthorized = user.authorized;\n      var isUserLoading = user.loading;\n      var isLoginLayout = getLayout() === 'login';\n\n      var BootstrappedLayout = function BootstrappedLayout() {\n        // show loader when user in check authorization process, not authorized yet and not on login pages\n        if (isUserLoading && !isUserAuthorized && !isLoginLayout) {\n          return React.createElement(Loader, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67\n            },\n            __self: this\n          });\n        } // redirect to login page if current is not login page and user not authorized\n\n\n        if (!isLoginLayout && !isUserAuthorized) {\n          return React.createElement(Redirect, {\n            to: \"/user/login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          });\n        } // redirect to main dashboard when user on login page and authorized\n\n\n        if (isLoginLayout && isUserAuthorized) {\n          return React.createElement(Redirect, {\n            to: \"/mun\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          });\n        } // in other case render previously set layout\n\n\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, children);\n      };\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Helmet, {\n        titleTemplate: \"Clean UI | %s\",\n        title: \"React Admin Template\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), BootstrappedLayout());\n    }\n  }]);\n\n  return IndexLayout;\n}(React.PureComponent), _temp)) || _class) || _class);\nexport default IndexLayout;","map":{"version":3,"sources":["/home/pmaheshwari/Desktop/TowardsStartUp/MunWorld/cleanui-admin-template-react-cra/src/layouts/index.js"],"names":["React","Fragment","withRouter","Redirect","connect","NProgress","Helmet","Loader","PublicLayout","LoginLayout","MainLayout","Layouts","public","login","main","IndexLayout","user","previousPath","prevProps","location","props","prevLocation","window","scrollTo","children","pathname","search","currentPath","start","setTimeout","done","getLayout","test","Container","isUserAuthorized","authorized","isUserLoading","loading","isLoginLayout","BootstrappedLayout","PureComponent"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\nimport { withRouter, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport NProgress from 'nprogress'\nimport { Helmet } from 'react-helmet'\nimport Loader from 'components/LayoutComponents/Loader'\nimport PublicLayout from './Public'\nimport LoginLayout from './Login'\nimport MainLayout from './Main'\n\nconst Layouts = {\n  public: PublicLayout,\n  login: LoginLayout,\n  main: MainLayout,\n}\n\n@withRouter\n@connect(({ user }) => ({ user }))\nclass IndexLayout extends React.PureComponent {\n  previousPath = ''\n\n  componentDidUpdate(prevProps) {\n    const { location } = this.props\n    const { prevLocation } = prevProps\n    if (location !== prevLocation) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    const {\n      children,\n      location: { pathname, search },\n      user,\n    } = this.props\n\n    // NProgress Management\n    const currentPath = pathname + search\n    if (currentPath !== this.previousPath) {\n      NProgress.start()\n    }\n\n    setTimeout(() => {\n      NProgress.done()\n      this.previousPath = currentPath\n    }, 300)\n\n    // Layout Rendering\n    const getLayout = () => {\n      if (pathname === '/') {\n        return 'public'\n      }\n      if (/^\\/user(?=\\/|$)/i.test(pathname)) {\n        return 'login'\n      }\n      return 'main'\n    }\n\n    const Container = Layouts[getLayout()]\n    const isUserAuthorized = user.authorized\n    const isUserLoading = user.loading\n    const isLoginLayout = getLayout() === 'login'\n\n    const BootstrappedLayout = () => {\n      // show loader when user in check authorization process, not authorized yet and not on login pages\n      if (isUserLoading && !isUserAuthorized && !isLoginLayout) {\n        return <Loader />\n      }\n      // redirect to login page if current is not login page and user not authorized\n      if (!isLoginLayout && !isUserAuthorized) {\n        return <Redirect to=\"/user/login\" />\n      }\n      // redirect to main dashboard when user on login page and authorized\n      if (isLoginLayout && isUserAuthorized) {\n        return <Redirect to=\"/mun\" />\n      }\n      // in other case render previously set layout\n      return <Container>{children}</Container>\n    }\n\n    return (\n      <Fragment>\n        <Helmet titleTemplate=\"Clean UI | %s\" title=\"React Admin Template\" />\n        {BootstrappedLayout()}\n      </Fragment>\n    )\n  }\n}\n\nexport default IndexLayout\n"]},"metadata":{},"sourceType":"module"}