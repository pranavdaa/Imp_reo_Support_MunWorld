{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Format = require(\"d3-format\");\n\nvar _displayValuesFor = require(\"./displayValuesFor\");\n\nvar _displayValuesFor2 = _interopRequireDefault(_displayValuesFor);\n\nvar _GenericChartComponent = require(\"../GenericChartComponent\");\n\nvar _GenericChartComponent2 = _interopRequireDefault(_GenericChartComponent);\n\nvar _ToolTipText = require(\"./ToolTipText\");\n\nvar _ToolTipText2 = _interopRequireDefault(_ToolTipText);\n\nvar _ToolTipTSpanLabel = require(\"./ToolTipTSpanLabel\");\n\nvar _ToolTipTSpanLabel2 = _interopRequireDefault(_ToolTipTSpanLabel);\n\nvar _utils = require(\"../utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar SingleMAToolTip = function (_Component) {\n  _inherits(SingleMAToolTip, _Component);\n\n  function SingleMAToolTip(props) {\n    _classCallCheck(this, SingleMAToolTip);\n\n    var _this = _possibleConstructorReturn(this, (SingleMAToolTip.__proto__ || Object.getPrototypeOf(SingleMAToolTip)).call(this, props));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(SingleMAToolTip, [{\n    key: \"handleClick\",\n    value: function handleClick(e) {\n      var _props = this.props,\n          onClick = _props.onClick,\n          forChart = _props.forChart,\n          options = _props.options;\n      onClick(_extends({\n        chartId: forChart\n      }, options), e);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _props2 = this.props,\n          textFill = _props2.textFill,\n          labelFill = _props2.labelFill;\n      var translate = \"translate(\" + this.props.origin[0] + \", \" + this.props.origin[1] + \")\";\n      return _react2.default.createElement(\"g\", {\n        transform: translate\n      }, _react2.default.createElement(\"line\", {\n        x1: 0,\n        y1: 2,\n        x2: 0,\n        y2: 28,\n        stroke: this.props.color,\n        strokeWidth: \"4px\"\n      }), _react2.default.createElement(_ToolTipText2.default, {\n        x: 5,\n        y: 11,\n        fontFamily: this.props.fontFamily,\n        fontSize: this.props.fontSize\n      }, _react2.default.createElement(_ToolTipTSpanLabel2.default, {\n        fill: labelFill\n      }, this.props.displayName), _react2.default.createElement(\"tspan\", {\n        x: \"5\",\n        dy: \"15\",\n        fill: textFill\n      }, this.props.value)), _react2.default.createElement(\"rect\", {\n        x: 0,\n        y: 0,\n        width: 55,\n        height: 30,\n        onClick: this.handleClick,\n        fill: \"none\",\n        stroke: \"none\"\n      }));\n    }\n  }]);\n\n  return SingleMAToolTip;\n}(_react.Component);\n\nSingleMAToolTip.propTypes = {\n  origin: _propTypes2.default.array.isRequired,\n  color: _propTypes2.default.string.isRequired,\n  displayName: _propTypes2.default.string.isRequired,\n  value: _propTypes2.default.string.isRequired,\n  onClick: _propTypes2.default.func,\n  fontFamily: _propTypes2.default.string,\n  textFill: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  forChart: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]).isRequired,\n  options: _propTypes2.default.object.isRequired\n};\n\nvar MovingAverageTooltip = function (_Component2) {\n  _inherits(MovingAverageTooltip, _Component2);\n\n  function MovingAverageTooltip(props) {\n    _classCallCheck(this, MovingAverageTooltip);\n\n    var _this2 = _possibleConstructorReturn(this, (MovingAverageTooltip.__proto__ || Object.getPrototypeOf(MovingAverageTooltip)).call(this, props));\n\n    _this2.renderSVG = _this2.renderSVG.bind(_this2);\n    return _this2;\n  }\n\n  _createClass(MovingAverageTooltip, [{\n    key: \"renderSVG\",\n    value: function renderSVG(moreProps) {\n      var displayValuesFor = this.props.displayValuesFor;\n      var chartId = moreProps.chartId;\n      var chartConfig = moreProps.chartConfig;\n      var _props3 = this.props,\n          className = _props3.className,\n          onClick = _props3.onClick,\n          width = _props3.width,\n          fontFamily = _props3.fontFamily,\n          fontSize = _props3.fontSize,\n          textFill = _props3.textFill,\n          labelFill = _props3.labelFill;\n      var _props4 = this.props,\n          originProp = _props4.origin,\n          displayFormat = _props4.displayFormat,\n          options = _props4.options;\n      var height = moreProps.chartConfig.height;\n      var currentItem = displayValuesFor(this.props, moreProps);\n      var config = chartConfig;\n      var origin = (0, _utils.functor)(originProp);\n\n      var _origin = origin(width, height),\n          _origin2 = _slicedToArray(_origin, 2),\n          x = _origin2[0],\n          y = _origin2[1];\n\n      var _config$origin = _slicedToArray(config.origin, 2),\n          ox = _config$origin[0],\n          oy = _config$origin[1];\n\n      return _react2.default.createElement(\"g\", {\n        transform: \"translate(\" + (ox + x) + \", \" + (oy + y) + \")\",\n        className: className\n      }, options.map(function (each, idx) {\n        var yValue = currentItem && each.yAccessor(currentItem);\n        var tooltipLabel = each.type + \" (\" + each.windowSize + \")\";\n        var yDisplayValue = yValue ? displayFormat(yValue) : \"n/a\";\n        return _react2.default.createElement(SingleMAToolTip, {\n          key: idx,\n          origin: [width * idx, 0],\n          color: each.stroke,\n          displayName: tooltipLabel,\n          value: yDisplayValue,\n          options: each,\n          forChart: chartId,\n          onClick: onClick,\n          fontFamily: fontFamily,\n          fontSize: fontSize,\n          textFill: textFill,\n          labelFill: labelFill\n        });\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(_GenericChartComponent2.default, {\n        clip: false,\n        svgDraw: this.renderSVG,\n        drawOn: [\"mousemove\"]\n      });\n    }\n  }]);\n\n  return MovingAverageTooltip;\n}(_react.Component);\n\nMovingAverageTooltip.propTypes = {\n  className: _propTypes2.default.string,\n  displayFormat: _propTypes2.default.func.isRequired,\n  origin: _propTypes2.default.array.isRequired,\n  displayValuesFor: _propTypes2.default.func,\n  onClick: _propTypes2.default.func,\n  textFill: _propTypes2.default.string,\n  labelFill: _propTypes2.default.string,\n  fontFamily: _propTypes2.default.string,\n  fontSize: _propTypes2.default.number,\n  width: _propTypes2.default.number,\n  options: _propTypes2.default.arrayOf(_propTypes2.default.shape({\n    yAccessor: _propTypes2.default.func.isRequired,\n    type: _propTypes2.default.string.isRequired,\n    stroke: _propTypes2.default.string.isRequired,\n    windowSize: _propTypes2.default.number.isRequired,\n    echo: _propTypes2.default.any\n  }))\n};\nMovingAverageTooltip.defaultProps = {\n  className: \"react-stockcharts-tooltip react-stockcharts-moving-average-tooltip\",\n  displayFormat: (0, _d3Format.format)(\".2f\"),\n  displayValuesFor: _displayValuesFor2.default,\n  origin: [0, 10],\n  width: 65\n};\nexports.default = MovingAverageTooltip;","map":null,"metadata":{},"sourceType":"script"}