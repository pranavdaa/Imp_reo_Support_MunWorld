{"ast":null,"code":"import noop from \"./noop\";\nimport identity from \"./identity\";\nimport { functor } from \"./index\";\nexport default function () {\n  var undefinedValue = undefined,\n      windowSize = 10,\n      accumulator = noop,\n      source = identity,\n      skipInitial = 0; // eslint-disable-next-line prefer-const\n\n  var mappedSlidingWindow = function mappedSlidingWindow(data) {\n    var size = functor(windowSize).apply(this, arguments);\n    var windowData = [];\n    var accumulatorIdx = 0;\n    var undef = functor(undefinedValue); // console.log(skipInitial, size, data.length, windowData.length);\n\n    var result = [];\n    data.forEach(function (d, i) {\n      // console.log(d, i, windowData.length);\n      var mapped = void 0;\n\n      if (i < skipInitial + size - 1) {\n        mapped = undef(d, i);\n        result.push(mapped);\n        windowData.push(mapped);\n        return;\n      }\n\n      if (i >= skipInitial + size) {\n        // Treat windowData as FIFO rolling buffer\n        windowData.shift();\n      }\n\n      windowData.push(source(d, i));\n      mapped = accumulator(windowData, i, accumulatorIdx++);\n      result.push(mapped);\n      windowData.pop();\n      windowData.push(mapped);\n      return;\n    });\n    return result;\n  };\n\n  mappedSlidingWindow.undefinedValue = function (x) {\n    if (!arguments.length) {\n      return undefinedValue;\n    }\n\n    undefinedValue = x;\n    return mappedSlidingWindow;\n  };\n\n  mappedSlidingWindow.windowSize = function (x) {\n    if (!arguments.length) {\n      return windowSize;\n    }\n\n    windowSize = x;\n    return mappedSlidingWindow;\n  };\n\n  mappedSlidingWindow.accumulator = function (x) {\n    if (!arguments.length) {\n      return accumulator;\n    }\n\n    accumulator = x;\n    return mappedSlidingWindow;\n  };\n\n  mappedSlidingWindow.skipInitial = function (x) {\n    if (!arguments.length) {\n      return skipInitial;\n    }\n\n    skipInitial = x;\n    return mappedSlidingWindow;\n  };\n\n  mappedSlidingWindow.source = function (x) {\n    if (!arguments.length) {\n      return source;\n    }\n\n    source = x;\n    return mappedSlidingWindow;\n  };\n\n  return mappedSlidingWindow;\n}","map":null,"metadata":{},"sourceType":"module"}