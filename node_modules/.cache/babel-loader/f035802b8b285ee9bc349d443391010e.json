{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { scaleLinear } from \"d3-scale\";\nimport PureComponent from \"./utils/PureComponent\";\nimport { isNotDefined, noop, find } from \"./utils\";\n\nvar Chart = function (_PureComponent) {\n  _inherits(Chart, _PureComponent);\n\n  function Chart(props, context) {\n    _classCallCheck(this, Chart);\n\n    var _this = _possibleConstructorReturn(this, (Chart.__proto__ || Object.getPrototypeOf(Chart)).call(this, props, context));\n\n    _this.yScale = _this.yScale.bind(_this);\n    _this.listener = _this.listener.bind(_this);\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var id = this.props.id;\n      var subscribe = this.context.subscribe;\n      subscribe(\"chart_\" + id, {\n        listener: this.listener\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var id = this.props.id;\n      var unsubscribe = this.context.unsubscribe;\n      unsubscribe(\"chart_\" + id);\n    }\n  }, {\n    key: \"listener\",\n    value: function listener(type, moreProps, state, e) {\n      var _props = this.props,\n          id = _props.id,\n          onContextMenu = _props.onContextMenu;\n\n      if (type === \"contextmenu\") {\n        var currentCharts = moreProps.currentCharts;\n\n        if (currentCharts.indexOf(id) > -1) {\n          onContextMenu(moreProps, e);\n        }\n      }\n    }\n  }, {\n    key: \"yScale\",\n    value: function yScale() {\n      var _this2 = this;\n\n      var chartConfig = find(this.context.chartConfig, function (each) {\n        return each.id === _this2.props.id;\n      });\n      return chartConfig.yScale.copy();\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      var chartId = this.props.id;\n      var chartConfig = find(this.context.chartConfig, function (each) {\n        return each.id === chartId;\n      });\n      return {\n        chartId: chartId,\n        chartConfig: chartConfig\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _find = find(this.context.chartConfig, function (each) {\n        return each.id === _this3.props.id;\n      }),\n          origin = _find.origin;\n\n      var _origin = _slicedToArray(origin, 2),\n          x = _origin[0],\n          y = _origin[1];\n\n      return React.createElement(\"g\", {\n        transform: \"translate(\" + x + \", \" + y + \")\"\n      }, this.props.children);\n    }\n  }]);\n\n  return Chart;\n}(PureComponent);\n\nChart.propTypes = {\n  height: PropTypes.number,\n  origin: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  yExtents: PropTypes.oneOfType([PropTypes.array, PropTypes.func]),\n  yExtentsCalculator: function yExtentsCalculator(props, propName, componentName) {\n    if (isNotDefined(props.yExtents) && typeof props.yExtentsCalculator !== \"function\") return new Error(\"yExtents or yExtentsCalculator must\" + (\" be present on \" + componentName + \". Validation failed.\"));\n  },\n  onContextMenu: PropTypes.func,\n  yScale: PropTypes.func,\n  flipYScale: PropTypes.bool,\n  padding: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    top: PropTypes.number,\n    bottom: PropTypes.number\n  })]),\n  children: PropTypes.node\n};\nChart.defaultProps = {\n  id: 0,\n  origin: [0, 0],\n  padding: 0,\n  yScale: scaleLinear(),\n  flipYScale: false,\n  yPan: true,\n  yPanEnabled: false,\n  onContextMenu: noop\n};\nChart.contextTypes = {\n  chartConfig: PropTypes.array,\n  subscribe: PropTypes.func.isRequired,\n  unsubscribe: PropTypes.func.isRequired\n};\nChart.childContextTypes = {\n  chartConfig: PropTypes.object.isRequired,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n};\nexport default Chart;","map":null,"metadata":{},"sourceType":"module"}