{"ast":null,"code":"import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar toConsumableArray = function toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar style = {\n  container: {\n    position: 'relative'\n  },\n  mainImage: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat'\n  },\n  overlayImage: {\n    position: 'absolute',\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat'\n  }\n};\n\nvar Overlay = function (_Component) {\n  inherits(Overlay, _Component);\n\n  function Overlay() {\n    classCallCheck(this, Overlay);\n\n    var _this = possibleConstructorReturn(this, (Overlay.__proto__ || Object.getPrototypeOf(Overlay)).call(this));\n\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  createClass(Overlay, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _props = this.props,\n          url = _props.url,\n          overlayUrl = _props.overlayUrl,\n          watermark = _props.watermark;\n\n      if (watermark) {\n        var context = this.canvasRef;\n        var img = new Image();\n        var overlay = new Image();\n        img.src = url;\n\n        img.onload = function () {\n          overlay.src = overlayUrl;\n\n          overlay.onload = function () {\n            context.drawImage(img, 0, 0);\n            context.drawImage.apply(context, toConsumableArray(_this2.overlayCanvas(overlay)));\n          };\n        };\n      }\n    }\n  }, {\n    key: 'overlayCanvas',\n    value: function overlayCanvas(overlay) {\n      var _props2 = this.props,\n          position = _props2.position,\n          overlayHeight = _props2.overlayHeight,\n          imageHeight = _props2.imageHeight,\n          imageWidth = _props2.imageWidth,\n          overlayWidth = _props2.overlayWidth,\n          overlayPadding = _props2.overlayPadding;\n\n      switch (position) {\n        case 'topLeft':\n          return [overlay, overlayPadding, overlayPadding];\n\n        case 'topRight':\n          return [overlay, imageWidth - overlayWidth - overlayPadding, overlayPadding];\n\n        case 'bottomLeft':\n          return [overlay, overlayPadding, imageHeight - overlayHeight - overlayPadding];\n\n        case 'center':\n          return [overlay, Math.floor(imageWidth / 2 - overlayWidth / 2), Math.floor(imageHeight / 2 - overlayHeight / 2)];\n\n        default:\n          return [overlay, imageHeight - overlayHeight - overlayPadding, imageWidth - overlayWidth - overlayPadding];\n      }\n    }\n  }, {\n    key: 'overlayPosition',\n    value: function overlayPosition() {\n      var _props3 = this.props,\n          position = _props3.position,\n          overlayPadding = _props3.overlayPadding;\n\n      switch (position) {\n        case 'topLeft':\n          return {\n            top: overlayPadding,\n            left: overlayPadding\n          };\n\n        case 'topRight':\n          return {\n            top: overlayPadding,\n            right: overlayPadding\n          };\n\n        case 'bottomLeft':\n          return {\n            bottom: overlayPadding,\n            left: overlayPadding\n          };\n\n        case 'center':\n          return {\n            right: 0,\n            left: 0,\n            top: 0,\n            bottom: 0,\n            margin: 'auto auto'\n          };\n\n        default:\n          return {\n            bottom: overlayPadding,\n            right: overlayPadding\n          };\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var container = style.container,\n          mainImage = style.mainImage,\n          overlayImage = style.overlayImage;\n      var _props4 = this.props,\n          url = _props4.url,\n          imageHeight = _props4.imageHeight,\n          imageWidth = _props4.imageWidth,\n          overlayHeight = _props4.overlayHeight,\n          overlayWidth = _props4.overlayWidth,\n          position = _props4.position,\n          overlayUrl = _props4.overlayUrl,\n          watermark = _props4.watermark;\n\n      if (watermark) {\n        return React.createElement('canvas', {\n          ref: function ref(c) {\n            return _this3.canvasRef = c.getContext('2d');\n          },\n          height: imageHeight,\n          width: imageWidth\n        });\n      }\n\n      return React.createElement('div', {\n        style: _extends({}, container, {\n          height: imageHeight,\n          width: imageWidth\n        })\n      }, React.createElement('img', {\n        src: url,\n        alt: 'main',\n        style: _extends({}, mainImage, {\n          backgroundImage: 'url(\"' + url + '\")'\n        })\n      }), React.createElement('img', {\n        src: overlayUrl,\n        alt: 'overlay',\n        style: _extends({}, overlayImage, {\n          height: overlayHeight,\n          width: overlayWidth\n        }, this.overlayPosition(position))\n      }));\n    }\n  }]);\n  return Overlay;\n}(Component);\n\nOverlay.propTypes = {\n  url: PropTypes.string.isRequired,\n  overlayUrl: PropTypes.string.isRequired,\n  imageHeight: PropTypes.number,\n  imageWidth: PropTypes.number,\n  overlayHeight: PropTypes.number,\n  overlayWidth: PropTypes.number,\n  position: PropTypes.string,\n  watermark: PropTypes.bool,\n  overlayPadding: PropTypes.number\n};\nOverlay.defaultProps = {\n  imageHeight: 250,\n  imageWidth: 250,\n  overlayHeight: 30,\n  overlayWidth: 30,\n  position: null,\n  watermark: true,\n  overlayPadding: 10\n};\nexport default Overlay;","map":null,"metadata":{},"sourceType":"module"}