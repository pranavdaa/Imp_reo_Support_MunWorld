var actionKey = '@@react-redux-spinner/pending-task';
var begin = '@@react-redux-spinner/begin';
var end = '@@react-redux-spinner/end';
var endAll = '@@react-redux-spinner/end-all';

var configurablePendingTasksReducer = function configurablePendingTasksReducer() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      _ref$actionKeyPath = _ref.actionKeyPath,
      actionKeyPath = _ref$actionKeyPath === void 0 ? [] : _ref$actionKeyPath;

  return function () {
    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
    var action = arguments.length > 1 ? arguments[1] : undefined;
    // Reduce the action to find the configured path
    var obj = actionKeyPath.reduce(function (acc, path) {
      return acc[path];
    }, action);

    if (!obj) {
      // Configured path is not included in this action. Nothing to do.
      return state;
    }

    if (obj[actionKey] === begin) {
      return state + 1;
    }

    if (obj[actionKey] === end) {
      if (state - 1 < 0) {
        throw new RangeError("Number of pending tasks decreased below zero. This indicates you have an error in your code. 'end' is called more often than 'begin'.");
      }

      return state - 1;
    }

    if (obj[actionKey] === endAll) {
      return 0;
    }

    return state;
  };
};

var pendingTasksReducer = configurablePendingTasksReducer();
export { actionKey, begin, end, endAll, pendingTasksReducer, configurablePendingTasksReducer };