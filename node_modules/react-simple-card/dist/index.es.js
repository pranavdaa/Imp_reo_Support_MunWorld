import React from 'react';

/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var classnames = createCommonjsModule(function (module) {
/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
/* global define */

(function () {

	var hasOwn = {}.hasOwnProperty;

	function classNames () {
		var classes = [];

		for (var i = 0; i < arguments.length; i++) {
			var arg = arguments[i];
			if (!arg) continue;

			var argType = typeof arg;

			if (argType === 'string' || argType === 'number') {
				classes.push(arg);
			} else if (Array.isArray(arg) && arg.length) {
				var inner = classNames.apply(null, arg);
				if (inner) {
					classes.push(inner);
				}
			} else if (argType === 'object') {
				for (var key in arg) {
					if (hasOwn.call(arg, key) && arg[key]) {
						classes.push(key);
					}
				}
			}
		}

		return classes.join(' ');
	}

	if (module.exports) {
		classNames.default = classNames;
		module.exports = classNames;
	} else {
		window.classNames = classNames;
	}
}());
});

function styleInject(css, ref) {
  if ( ref === void 0 ) ref = {};
  var insertAt = ref.insertAt;

  if (!css || typeof document === 'undefined') { return; }

  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.type = 'text/css';

  if (insertAt === 'top') {
    if (head.firstChild) {
      head.insertBefore(style, head.firstChild);
    } else {
      head.appendChild(style);
    }
  } else {
    head.appendChild(style);
  }

  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    style.appendChild(document.createTextNode(css));
  }
}

var css = ".card {\n  width: 100%;\n  display: block;\n  position: relative;\n  border-radius: 4px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc; }\n";
styleInject(css);

var Card = (function (_a) {
    var className = _a.className, _b = _a.bgColor, bgColor = _b === void 0 ? '#fff' : _b, _c = _a.fontColor, fontColor = _c === void 0 ? '#000' : _c, style = _a.style, children = _a.children;
    var styles = __assign({}, style, { backgroundColor: bgColor, color: fontColor });
    return (React.createElement("div", { className: classnames('card', className), style: styles }, children));
});

var css$1 = ".card__body {\n  padding: 18px; }\n";
styleInject(css$1);

var CardBody = (function (_a) {
    var className = _a.className, style = _a.style, children = _a.children;
    return (React.createElement("div", { className: classnames('card__body', className), style: style }, children));
});

var css$2 = ".card__footer {\n  display: flex;\n  align-items: center;\n  padding: 10px 18px;\n  border-top: 1px solid #ccc;\n  margin-top: 0; }\n";
styleInject(css$2);

var CardFooter = (function (_a) {
    var className = _a.className, style = _a.style, children = _a.children;
    return (React.createElement("div", { className: classnames('card__footer', className), style: style }, children));
});

var css$3 = ".card__header {\n  display: flex;\n  align-items: center;\n  padding: 10px 18px;\n  border-bottom: 1px solid #ccc;\n  margin-top: 0; }\n";
styleInject(css$3);

var CardHeader = (function (_a) {
    var className = _a.className, style = _a.style, children = _a.children;
    return (React.createElement("div", { className: classnames('card__header', className), style: style }, children));
});

var css$4 = ".card__header--image {\n  position: relative; }\n  .card__header--image img {\n    display: block;\n    width: 100%;\n    border-radius: 2px 2px 0 0;\n    position: relative;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0; }\n";
styleInject(css$4);

var ImageHeader = (function (_a) {
    var className = _a.className, style = _a.style, imageSrc = _a.imageSrc, _b = _a.alt, alt = _b === void 0 ? '' : _b;
    return (React.createElement("div", { className: classnames('card__header--image', className), style: style },
        React.createElement("img", { src: imageSrc, alt: alt })));
});

var index = {
    Card: Card,
    CardBody: CardBody,
    CardFooter: CardFooter,
    CardHeader: CardHeader,
    ImageHeader: ImageHeader
};

export default index;
export { Card, CardBody, CardFooter, CardHeader, ImageHeader };
//# sourceMappingURL=index.es.js.map
